import 'react';
import './Provider/ThemeContext.js';
import 'classnames';
import { css } from 'emotion';
import '@emotion/core';
import 'emotion-theming';
import '@emotion/styled';
import { a as _taggedTemplateLiteralLoose } from './_rollupPluginBabelHelpers.js';
import './ColorMode/ColorModeContext.js';
import 'lodash/kebabCase';
import 'tinycolor2';
import { t as theme, s as space } from './getCSSFromStyleObject.js';
import 'lodash/uniq';
import 'reakit/Id';
import 'deepmerge';
import 'lodash/set';
import 'capsize';
import '@emotion/is-prop-valid';
import './utils/OutsideClickHandler.js';

function _templateObject4() {
  var data = _taggedTemplateLiteralLoose(["\n  & {\n    ", ";\n  }\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteralLoose(["\n  display: inline;\n  margin-left: ", "rem;\n\n  & {\n    ", ";\n  }\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteralLoose(["\n  &&&&&:not(:last-child) {\n    margin-right: ", "rem;\n  }\n\n  & {\n    ", ";\n  }\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n  & {\n    ", ";\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var Breadcrumb = function Breadcrumb(styleProps) {
  return css(_templateObject(), theme(styleProps.themeKey, "styles.base")(styleProps));
};
var BreadcrumbItem = function BreadcrumbItem(styleProps) {
  return css(_templateObject2(), space(2)(styleProps), theme(styleProps.themeKey, "styles.base")(styleProps));
};
var BreadcrumbSeparator = function BreadcrumbSeparator(styleProps) {
  return css(_templateObject3(), space(2)(styleProps), theme(styleProps.themeKey, "styles.base")(styleProps));
};
var BreadcrumbLink = function BreadcrumbLink(styleProps) {
  return css(_templateObject4(), theme(styleProps.themeKey, "styles.base")(styleProps));
};

var Breadcrumb_styles = /*#__PURE__*/Object.freeze({
  __proto__: null,
  Breadcrumb: Breadcrumb,
  BreadcrumbItem: BreadcrumbItem,
  BreadcrumbSeparator: BreadcrumbSeparator,
  BreadcrumbLink: BreadcrumbLink
});

export { Breadcrumb_styles as B, Breadcrumb as a, BreadcrumbItem as b, BreadcrumbSeparator as c, BreadcrumbLink as d };
