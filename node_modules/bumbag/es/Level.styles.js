import 'react';
import './Provider/ThemeContext.js';
import 'classnames';
import { css } from 'emotion';
import { css as css$1 } from '@emotion/core';
import 'emotion-theming';
import '@emotion/styled';
import { a as _taggedTemplateLiteralLoose } from './_rollupPluginBabelHelpers.js';
import './ColorMode/ColorModeContext.js';
import 'lodash/kebabCase';
import 'tinycolor2';
import { j as breakpoint, s as space, t as theme } from './getCSSFromStyleObject.js';
import 'lodash/uniq';
import 'reakit/Id';
import 'deepmerge';
import 'lodash/set';
import 'capsize';
import '@emotion/is-prop-valid';
import './utils/OutsideClickHandler.js';
import { g as getAlignmentAttributes } from './Box.styles.js';

function _templateObject4() {
  var data = _taggedTemplateLiteralLoose(["\n            flex-direction: column;\n          "]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteralLoose(["\n          justify-content: space-between;\n\n          ", "\n        "]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteralLoose(["\n        flex-direction: column;\n\n        & > *:not(:last-child) {\n          margin-bottom: ", "rem;\n        }\n\n        ", "\n      "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n  &&& {\n    ", ";\n  }\n\n\n  & {\n    ", ";\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var Level = function Level(styleProps) {
  return css(_templateObject(), breakpoint(styleProps.orientation === 'horizontal' && styleProps.verticalBelow ? "max-" + styleProps.verticalBelow : null, css$1(_templateObject2(), space(styleProps.spacing)(styleProps), getAlignmentAttributes(styleProps)), {
    else: css$1(_templateObject3(), styleProps.orientation === 'vertical' && css$1(_templateObject4()))
  })(styleProps), theme(styleProps.themeKey, "styles.base")(styleProps));
};

var Level_styles = /*#__PURE__*/Object.freeze({
  __proto__: null,
  Level: Level
});

export { Level_styles as L, Level as a };
