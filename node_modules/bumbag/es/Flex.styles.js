import 'react';
import './Provider/ThemeContext.js';
import 'classnames';
import { css } from 'emotion';
import { css as css$1 } from '@emotion/core';
import 'emotion-theming';
import '@emotion/styled';
import { a as _taggedTemplateLiteralLoose } from './_rollupPluginBabelHelpers.js';
import './ColorMode/ColorModeContext.js';
import 'lodash/kebabCase';
import 'tinycolor2';
import { t as theme } from './getCSSFromStyleObject.js';
import 'lodash/uniq';
import 'reakit/Id';
import 'deepmerge';
import 'lodash/set';
import 'capsize';
import '@emotion/is-prop-valid';
import './utils/OutsideClickHandler.js';

function _templateObject7() {
  var data = _taggedTemplateLiteralLoose(["\n            align-items: unset;\n          "]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteralLoose(["\n          justify-content: ", ";\n          ", "\n        "]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteralLoose(["\n            justify-content: unset;\n          "]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteralLoose(["\n          align-items: ", ";\n          ", "\n        "]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteralLoose(["\n        flex-direction: unset;\n\n        ", "\n\n        ", "\n      "]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteralLoose(["\n    && {\n      ", "\n    }\n  "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n  display: flex;\n\n  ", "\n\n  & {\n    ", ";\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var FLEX_HORIZONTAL_ALIGN_MAP = {
  left: 'flex-start',
  center: 'center',
  right: 'flex-end'
};
var FLEX_VERTICAL_ALIGN_MAP = {
  top: 'flex-start',
  center: 'center',
  bottom: 'flex-end'
};
var Flex = function Flex(styleProps) {
  return css(_templateObject(), getFlexAlignmentAttributes(styleProps), theme(styleProps.themeKey, "styles.base")(styleProps));
};
function getFlexAlignmentAttributes(styleProps) {
  return css$1(_templateObject2(), (styleProps.alignY || styleProps.alignX) && css$1(_templateObject3(), styleProps.alignY && css$1(_templateObject4(), FLEX_VERTICAL_ALIGN_MAP[styleProps.alignY], !styleProps.alignX && css$1(_templateObject5())), styleProps.alignX && css$1(_templateObject6(), FLEX_HORIZONTAL_ALIGN_MAP[styleProps.alignX], !styleProps.alignY && css$1(_templateObject7()))));
}

var Flex_styles = /*#__PURE__*/Object.freeze({
  __proto__: null,
  Flex: Flex,
  getFlexAlignmentAttributes: getFlexAlignmentAttributes
});

export { Flex_styles as F, Flex as a, getFlexAlignmentAttributes as g };
