import 'react';
import './Provider/ThemeContext.js';
import 'classnames';
import { css } from 'emotion';
import { css as css$1 } from '@emotion/core';
import 'emotion-theming';
import '@emotion/styled';
import { a as _taggedTemplateLiteralLoose } from './_rollupPluginBabelHelpers.js';
import './ColorMode/ColorModeContext.js';
import 'lodash/kebabCase';
import 'tinycolor2';
import { p as palette, a as altitude, t as theme } from './getCSSFromStyleObject.js';
import 'lodash/uniq';
import 'reakit/Id';
import 'deepmerge';
import 'lodash/set';
import 'capsize';
import '@emotion/is-prop-valid';
import './utils/OutsideClickHandler.js';

function _templateObject8() {
  var data = _taggedTemplateLiteralLoose(["\n  & {\n    ", ";\n  }\n"]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = _taggedTemplateLiteralLoose(["\n        width: 100%;\n      "]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteralLoose(["\n        height: ", ";\n      "]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteralLoose(["\n        bottom: 0;\n      "]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteralLoose(["\n        top: 0;\n      "]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteralLoose(["\n        right: 0;\n      "]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteralLoose(["\n        left: 0;\n      "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n  && {\n    position: fixed;\n    background-color: ", ";\n\n    ", "\n\n    ", "\n\n    ", "\n\n    ", "\n\n    ", "\n\n    ", "\n  }\n\n  ", ";\n\n  & {\n    ", ";\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var Drawer = function Drawer(styleProps) {
  return css(_templateObject(), palette('background')(styleProps), styleProps.placement === 'left' && css$1(_templateObject2()), styleProps.placement === 'right' && css$1(_templateObject3()), styleProps.placement === 'top' && css$1(_templateObject4()), styleProps.placement === 'bottom' && css$1(_templateObject5()), (styleProps.placement === 'left' || styleProps.placement === 'right' || styleProps.isFullScreen) && css$1(_templateObject6(), styleProps.viewportHeight), (styleProps.placement === 'top' || styleProps.placement === 'bottom' || styleProps.isFullScreen) && css$1(_templateObject7()), altitude('300')(styleProps), theme(styleProps.themeKey, "styles.base")(styleProps));
};
var DrawerDisclosure = function DrawerDisclosure(styleProps) {
  return css(_templateObject8(), theme(styleProps.themeKey, "styles.base")(styleProps));
};

var Drawer_styles = /*#__PURE__*/Object.freeze({
  __proto__: null,
  Drawer: Drawer,
  DrawerDisclosure: DrawerDisclosure
});

export { Drawer_styles as D, DrawerDisclosure as a, Drawer as b };
