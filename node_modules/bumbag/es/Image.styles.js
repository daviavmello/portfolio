import 'react';
import './Provider/ThemeContext.js';
import 'classnames';
import { css } from 'emotion';
import { css as css$1 } from '@emotion/core';
import 'emotion-theming';
import '@emotion/styled';
import { a as _taggedTemplateLiteralLoose } from './_rollupPluginBabelHelpers.js';
import './ColorMode/ColorModeContext.js';
import 'lodash/kebabCase';
import 'tinycolor2';
import { t as theme } from './getCSSFromStyleObject.js';
import 'lodash/uniq';
import 'reakit/Id';
import 'deepmerge';
import 'lodash/set';
import 'capsize';
import '@emotion/is-prop-valid';
import './utils/OutsideClickHandler.js';

function _templateObject6() {
  var data = _taggedTemplateLiteralLoose(["\n        object-position: ", ";\n      "]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteralLoose(["\n      object-fit: cover;\n\n      ", ";\n\n      ", ";\n    "]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteralLoose(["\n        object-position: ", ";\n      "]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteralLoose(["\n      object-fit: contain;\n\n      ", ";\n\n      ", ";\n    "]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteralLoose(["\n      max-width: unset;\n\n      ", ";\n    "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n  ", "\n\n  ", "\n\n  ", "\n\n  & {\n    ", ";\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var Image = function Image(styleProps) {
  return css(_templateObject(), styleProps.isFixed && css$1(_templateObject2(), theme(styleProps.themeKey, "styles.fixed")(styleProps)), styleProps.fit === 'contain' && css$1(_templateObject3(), styleProps.fitPosition && css$1(_templateObject4(), styleProps.fitPosition), theme(styleProps.themeKey, "styles.contain")(styleProps)), styleProps.fit === 'cover' && css$1(_templateObject5(), styleProps.fitPosition && css$1(_templateObject6(), styleProps.fitPosition), theme(styleProps.themeKey, "styles.cover")(styleProps)), theme(styleProps.themeKey, "styles.base")(styleProps));
};

var Image_styles = /*#__PURE__*/Object.freeze({
  __proto__: null,
  Image: Image
});

export { Image_styles as I, Image as a };
