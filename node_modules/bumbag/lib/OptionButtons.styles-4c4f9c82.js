'use strict';

require('react');
require('./Provider/ThemeContext.js');
require('classnames');
var emotion = require('emotion');
var core = require('@emotion/core');
require('emotion-theming');
require('@emotion/styled');
var _rollupPluginBabelHelpers = require('./_rollupPluginBabelHelpers-41d6b37b.js');
require('./ColorMode/ColorModeContext.js');
require('lodash/kebabCase');
require('tinycolor2');
var utils_theme = require('./getCSSFromStyleObject-d83e232a.js');
require('lodash/uniq');
require('reakit/Id');
require('deepmerge');
require('lodash/set');
require('capsize');
require('@emotion/is-prop-valid');
require('./utils/OutsideClickHandler.js');

function _templateObject8() {
  var data = _rollupPluginBabelHelpers._taggedTemplateLiteralLoose(["\n  & {\n    ", ";\n  }\n"]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = _rollupPluginBabelHelpers._taggedTemplateLiteralLoose(["\n      box-shadow: ", " 0px 0px 0px\n        3px;\n\n      & > *[aria-checked='false'] {\n        border-color: ", ";\n      }\n    "]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _rollupPluginBabelHelpers._taggedTemplateLiteralLoose(["\n      width: fit-content;\n    "]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _rollupPluginBabelHelpers._taggedTemplateLiteralLoose(["\n  ", ";\n\n  ", "\n\n  & {\n    ", ";\n  }\n"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _rollupPluginBabelHelpers._taggedTemplateLiteralLoose(["\n      border: 1px solid transparent;\n    "]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _rollupPluginBabelHelpers._taggedTemplateLiteralLoose(["\n      flex: 1;\n    "]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _rollupPluginBabelHelpers._taggedTemplateLiteralLoose(["\n  ", ";\n\n  ", "\n\n  & {\n    ", ";\n  }\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _rollupPluginBabelHelpers._taggedTemplateLiteralLoose(["\n  & {\n    ", ";\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var OptionButtons = function OptionButtons(styleProps) {
  return emotion.css(_templateObject(), utils_theme.theme(styleProps.themeKey, "styles.base")(styleProps));
};
var OptionButton = function OptionButton(styleProps) {
  return emotion.css(_templateObject2(), styleProps.isFullWidth && core.css(_templateObject3()), styleProps.checked && core.css(_templateObject4()), utils_theme.theme(styleProps.themeKey, "styles.base")(styleProps));
};
var OptionButtonsWrapper = function OptionButtonsWrapper(styleProps) {
  return emotion.css(_templateObject5(), !styleProps.isFullWidth && core.css(_templateObject6()), styleProps.state && core.css(_templateObject7(), utils_theme.palette(styleProps.state + "Tint", {
    dark: styleProps.state + "Shade"
  })(styleProps), utils_theme.palette("" + styleProps.state)(styleProps)), utils_theme.theme(styleProps.themeKey, "styles.base")(styleProps));
};
var OptionButtonsField = function OptionButtonsField(styleProps) {
  return emotion.css(_templateObject8(), utils_theme.theme(styleProps.themeKey, "styles.base")(styleProps));
};

var OptionButtons_styles = /*#__PURE__*/Object.freeze({
  __proto__: null,
  OptionButtons: OptionButtons,
  OptionButton: OptionButton,
  OptionButtonsWrapper: OptionButtonsWrapper,
  OptionButtonsField: OptionButtonsField
});

exports.OptionButton = OptionButton;
exports.OptionButtons = OptionButtons;
exports.OptionButtonsField = OptionButtonsField;
exports.OptionButtonsWrapper = OptionButtonsWrapper;
exports.OptionButtons_styles = OptionButtons_styles;
