'use strict';

require('react');
require('./Provider/ThemeContext.js');
require('classnames');
var emotion = require('emotion');
var core = require('@emotion/core');
require('emotion-theming');
require('@emotion/styled');
var _rollupPluginBabelHelpers = require('./_rollupPluginBabelHelpers-41d6b37b.js');
require('./ColorMode/ColorModeContext.js');
require('lodash/kebabCase');
require('tinycolor2');
var utils_theme = require('./getCSSFromStyleObject-d83e232a.js');
require('lodash/uniq');
require('reakit/Id');
require('deepmerge');
require('lodash/set');
require('capsize');
require('@emotion/is-prop-valid');
require('./utils/OutsideClickHandler.js');

function _templateObject10() {
  var data = _rollupPluginBabelHelpers._taggedTemplateLiteralLoose(["\n    && {\n      border-color: ", " !important;\n    }\n\n    background-color: ", ";\n    color: ", ";\n    fill: ", ";\n\n    & {\n      ", ";\n    }\n  "]);

  _templateObject10 = function _templateObject10() {
    return data;
  };

  return data;
}

function _templateObject9() {
  var data = _rollupPluginBabelHelpers._taggedTemplateLiteralLoose(["\n  max-width: 500px;\n\n  ", ";\n\n  & {\n    ", ";\n  }\n"]);

  _templateObject9 = function _templateObject9() {
    return data;
  };

  return data;
}

function _templateObject8() {
  var data = _rollupPluginBabelHelpers._taggedTemplateLiteralLoose(["\n  position: absolute;\n  top: ", "rem;\n  right: ", "rem;\n\n  & {\n    ", ";\n  }\n"]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = _rollupPluginBabelHelpers._taggedTemplateLiteralLoose(["\n  margin-right: ", "rem;\n\n  & .bb-Icon {\n    vertical-align: -0.125em;\n  }\n  & .bb-CalloutContent .bb-Icon {\n    font-size: 1.25em;\n  }\n\n  & {\n    ", ";\n  }\n"]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _rollupPluginBabelHelpers._taggedTemplateLiteralLoose(["\n  margin-top: ", "rem;\n\n  & {\n    ", ";\n  }\n"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _rollupPluginBabelHelpers._taggedTemplateLiteralLoose(["\n  font-size: ", "em;\n  font-weight: ", ";\n\n  & {\n    ", ";\n  }\n"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _rollupPluginBabelHelpers._taggedTemplateLiteralLoose(["\n  margin-bottom: ", "rem;\n\n  & {\n    ", ";\n  }\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _rollupPluginBabelHelpers._taggedTemplateLiteralLoose(["\n  & {\n    ", ";\n  }\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _rollupPluginBabelHelpers._taggedTemplateLiteralLoose(["\n      position: relative;\n    "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _rollupPluginBabelHelpers._taggedTemplateLiteralLoose(["\n  background-color: ", ";\n\n  ", "\n\n  ", ";\n\n  & {\n    ", ";\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var Callout = function Callout(styleProps) {
  return emotion.css(_templateObject(), utils_theme.palette('background', {
    dark: 'gray900'
  })(styleProps), styleProps.showCloseButton && core.css(_templateObject2()), styleProps.hasTint && getTintAttributes(styleProps), utils_theme.theme(styleProps.themeKey, "styles.base")(styleProps));
};
var CalloutContent = function CalloutContent(styleProps) {
  return emotion.css(_templateObject3(), utils_theme.theme(styleProps.themeKey, "styles.base")(styleProps));
};
var CalloutHeader = function CalloutHeader(styleProps) {
  return emotion.css(_templateObject4(), utils_theme.space(3, 'minor')(styleProps), utils_theme.theme(styleProps.themeKey, "styles.base")(styleProps));
};
var CalloutTitle = function CalloutTitle(styleProps) {
  return emotion.css(_templateObject5(), utils_theme.fontSize('300')(styleProps), utils_theme.fontWeight('semibold')(styleProps), utils_theme.theme(styleProps.themeKey, "styles.base")(styleProps));
};
var CalloutFooter = function CalloutFooter(styleProps) {
  return emotion.css(_templateObject6(), utils_theme.space(3, 'major')(styleProps), utils_theme.theme(styleProps.themeKey, "styles.base")(styleProps));
};
var CalloutIconWrapper = function CalloutIconWrapper(styleProps) {
  return emotion.css(_templateObject7(), utils_theme.space(2, 'major')(styleProps), utils_theme.theme(styleProps.themeKey, "styles.base")(styleProps));
};
var CalloutClose = function CalloutClose(styleProps) {
  return emotion.css(_templateObject8(), utils_theme.space(1, 'major')(styleProps), utils_theme.space(1, 'major')(styleProps), utils_theme.theme(styleProps.themeKey, "styles.base")(styleProps));
};
var CalloutOverlay = function CalloutOverlay(styleProps) {
  return emotion.css(_templateObject9(), utils_theme.altitude('200')(styleProps), utils_theme.theme(styleProps.themeKey, "styles.base")(styleProps));
};
var getTintAttributes = function getTintAttributes(styleProps) {
  return core.css(_templateObject10(), utils_theme.palette(styleProps.type + "100")(styleProps), utils_theme.palette(styleProps.type + "Tint", {
    dark: styleProps.type + "Shade"
  })(styleProps), utils_theme.palette(styleProps.type + "TintInverted", {
    dark: styleProps.type + "ShadeInverted"
  })(styleProps), utils_theme.palette(styleProps.type + "TintInverted", {
    dark: styleProps.type + "ShadeInverted"
  })(styleProps), utils_theme.theme(styleProps.themeKey, "tint")(styleProps));
};

var Callout_styles = /*#__PURE__*/Object.freeze({
  __proto__: null,
  Callout: Callout,
  CalloutContent: CalloutContent,
  CalloutHeader: CalloutHeader,
  CalloutTitle: CalloutTitle,
  CalloutFooter: CalloutFooter,
  CalloutIconWrapper: CalloutIconWrapper,
  CalloutClose: CalloutClose,
  CalloutOverlay: CalloutOverlay,
  getTintAttributes: getTintAttributes
});

exports.Callout = Callout;
exports.CalloutClose = CalloutClose;
exports.CalloutContent = CalloutContent;
exports.CalloutFooter = CalloutFooter;
exports.CalloutHeader = CalloutHeader;
exports.CalloutIconWrapper = CalloutIconWrapper;
exports.CalloutOverlay = CalloutOverlay;
exports.CalloutTitle = CalloutTitle;
exports.Callout_styles = Callout_styles;
exports.getTintAttributes = getTintAttributes;
