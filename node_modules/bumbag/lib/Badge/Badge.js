'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
require('../Provider/ThemeContext.js');
require('classnames');
require('emotion');
require('@emotion/core');
require('emotion-theming');
require('@emotion/styled');
require('../utils/useTheme.js');
require('../utils/useLocalStorage.js');
var _rollupPluginBabelHelpers = require('../_rollupPluginBabelHelpers-41d6b37b.js');
require('../utils/omit.js');
require('../ColorMode/utils.js');
require('../ColorMode/ColorModeContext.js');
require('../utils/pick.js');
require('../utils/cssProps.js');
require('lodash/kebabCase');
require('tinycolor2');
require('../utils/isFunction.js');
require('../utils/get.js');
require('../getCSSFromStyleObject-d83e232a.js');
require('../utils/useStyle.js');
require('../utils/omitBy.js');
require('../utils/useDefaultProps.js');
require('lodash/uniq');
var utils_useClassName = require('../utils/useClassName.js');
require('reakit/Id');
require('../utils/mergeRefs.js');
require('deepmerge');
require('lodash/set');
var utils_createComponent = require('../utils/createComponent.js');
var utils_createElement = require('../utils/createElement.js');
var utils_createHook = require('../utils/createHook.js');
require('capsize');
require('@emotion/is-prop-valid');
require('../utils/htmlProps.js');
require('../utils/OutsideClickHandler.js');
var reakit = require('reakit');
require('../Box.styles-fefb7baf.js');
var Box_Box = require('../Box/Box.js');
var Badge_Badge_styles = require('../Badge.styles-7d1a2c58.js');

var useProps = utils_createHook.createHook(function (props, _ref) {
  var themeKey = _ref.themeKey;
  var ref = React.useRef();
  var boxProps = Box_Box.Box.useProps(_rollupPluginBabelHelpers._objectSpread2(_rollupPluginBabelHelpers._objectSpread2({}, props), {}, {
    ref: ref
  }));
  var className = utils_useClassName.useClassName({
    style: Badge_Badge_styles.Badge,
    styleProps: props,
    themeKey: themeKey,
    prevClassName: boxProps.className
  });
  React.useEffect(function () {
    if (ref && ref.current) {
      // @ts-ignore
      var parentElement = ref.current.parentElement;
      parentElement.setAttribute('style', 'position:relative;');
    }
  }, []);
  return _rollupPluginBabelHelpers._objectSpread2(_rollupPluginBabelHelpers._objectSpread2({}, boxProps), {}, {
    className: className
  });
}, {
  defaultProps: {
    palette: 'primary'
  },
  themeKey: 'Badge'
});
var Badge = utils_createComponent.createComponent(function (props) {
  var badgeProps = useProps(props);
  return utils_createElement.createElement({
    children: props.children,
    component: reakit.Box,
    use: props.use,
    htmlProps: badgeProps
  });
}, {
  attach: {
    useProps: useProps,
    displayName: 'Badge'
  },
  defaultProps: {},
  themeKey: 'Badge'
});

exports.Badge = Badge;
