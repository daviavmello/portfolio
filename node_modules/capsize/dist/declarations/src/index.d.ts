export interface FontMetrics {
    ascent: number;
    descent: number;
    lineGap: number;
    unitsPerEm: number;
    capHeight: number;
}
export interface CapsizeStyles {
    fontSize: string;
    lineHeight: string;
    padding: string;
    '::before': {
        content: string;
        marginTop: string;
        display: string;
        height: number;
    };
    '::after': {
        content: string;
        marginBottom: string;
        display: string;
        height: number;
    };
}
declare type CapHeightWithLeading = {
    capHeight: number;
    leading?: number;
    fontMetrics: FontMetrics;
};
declare type CapHeightWithLineGap = {
    capHeight: number;
    lineGap: number;
    fontMetrics: FontMetrics;
};
declare type FontSizeWithLeading = {
    fontSize: number;
    leading?: number;
    fontMetrics: FontMetrics;
};
declare type FontSizeWithLineGap = {
    fontSize: number;
    lineGap: number;
    fontMetrics: FontMetrics;
};
export declare type CapsizeOptions = CapHeightWithLineGap | CapHeightWithLeading | FontSizeWithLineGap | FontSizeWithLeading;
declare function capsize(options: CapHeightWithLeading): CapsizeStyles;
declare function capsize(options: CapHeightWithLineGap): CapsizeStyles;
declare function capsize(options: FontSizeWithLineGap): CapsizeStyles;
declare function capsize(options: FontSizeWithLeading): CapsizeStyles;
export default capsize;
export declare const getCapHeight: ({ fontSize, fontMetrics, }: {
    fontSize: number;
    fontMetrics: FontMetrics;
}) => any;
