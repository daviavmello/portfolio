{"ast":null,"code":"import { createContext, useState, useCallback, useMemo, createElement as createElement$1 } from 'react';\nimport '../Provider/ThemeContext.js';\nimport 'classnames';\nimport '@emotion/css';\nimport '@emotion/react';\nimport '@emotion/styled';\nimport '../utils/useTheme.js';\nimport 'conditional-wrap';\nimport '../utils/useLocalStorage.js';\nimport { b as _objectWithoutPropertiesLoose, _ as _objectSpread2 } from '../_rollupPluginBabelHelpers.js';\nimport '../utils/omit.js';\nimport '../ColorMode/utils.js';\nimport '../ColorMode/ColorModeContext.js';\nimport '../utils/pick.js';\nimport '../utils/cssProps.js';\nimport 'lodash/kebabCase';\nimport 'tinycolor2';\nimport '../getCSSFromStyleObject.js';\nimport '../utils/isFunction.js';\nimport '../utils/get.js';\nimport '../utils/useStyle.js';\nimport '../utils/omitBy.js';\nimport '../utils/useDefaultProps.js';\nimport 'lodash/uniq';\nimport { useClassName } from '../utils/useClassName.js';\nimport 'reakit/Id';\nimport '../utils/mergeRefs.js';\nimport 'deepmerge';\nimport 'lodash/set';\nimport { createComponent } from '../utils/createComponent.js';\nimport { createElement } from '../utils/createElement.js';\nimport { createHook } from '../utils/createHook.js';\nimport 'lodash/get';\nimport 'capsize';\nimport '@emotion/is-prop-valid';\nimport '../utils/htmlProps.js';\nimport '../utils/OutsideClickHandler.js';\nimport { Box } from 'reakit';\nimport '../Box.styles.js';\nimport '../Box/Box.js';\nimport '../Navigation.styles.js';\nimport { Navigation } from '../Navigation/Navigation.js';\nimport { a as TopNav$1 } from '../TopNav.styles.js';\nvar TopNavContext = createContext({\n  onChangeSelectedId: function onChangeSelectedId() {},\n  selectedId: undefined,\n  overrides: {}\n});\nvar useProps = createHook(function (props, _ref) {\n  var themeKey = _ref.themeKey;\n\n  var children = props.children,\n      defaultSelectedId = props.defaultSelectedId,\n      onChange = props.onChange,\n      overrides = props.overrides,\n      _selectedId = props.selectedId,\n      restProps = _objectWithoutPropertiesLoose(props, [\"children\", \"defaultSelectedId\", \"onChange\", \"overrides\", \"selectedId\"]);\n\n  var navigationProps = Navigation.useProps(restProps);\n  var className = useClassName({\n    style: TopNav$1,\n    styleProps: props,\n    themeKey: themeKey,\n    prevClassName: navigationProps.className\n  });\n\n  var _React$useState = useState(defaultSelectedId || ''),\n      selectedId = _React$useState[0],\n      setSelectedId = _React$useState[1];\n\n  var handleChangeSelectedId = useCallback(function (id) {\n    if (onChange) {\n      onChange(id);\n    } else {\n      setSelectedId(id || '');\n    }\n  }, [onChange]);\n  var contextValue = useMemo(function () {\n    return {\n      onChangeSelectedId: handleChangeSelectedId,\n      selectedId: _selectedId || selectedId,\n      overrides: overrides\n    };\n  }, [_selectedId, handleChangeSelectedId, overrides, selectedId]);\n  return _objectSpread2(_objectSpread2({}, navigationProps), {}, {\n    className: className,\n    children: /*#__PURE__*/createElement$1(TopNavContext.Provider, {\n      value: contextValue\n    }, children)\n  });\n}, {\n  themeKey: 'TopNav'\n});\nvar TopNav = createComponent(function (props) {\n  var textProps = useProps(props);\n  return createElement({\n    children: props.children,\n    component: Box,\n    use: props.use,\n    htmlProps: textProps\n  });\n}, {\n  attach: {\n    useProps: useProps,\n    displayName: 'TopNav'\n  },\n  themeKey: 'TopNav'\n});\nexport { TopNav, TopNavContext };","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio/node_modules/bumbag/es/TopNav/TopNav.js"],"names":["createContext","useState","useCallback","useMemo","createElement","createElement$1","b","_objectWithoutPropertiesLoose","_","_objectSpread2","useClassName","createComponent","createHook","Box","Navigation","a","TopNav$1","TopNavContext","onChangeSelectedId","selectedId","undefined","overrides","useProps","props","_ref","themeKey","children","defaultSelectedId","onChange","_selectedId","restProps","navigationProps","className","style","styleProps","prevClassName","_React$useState","setSelectedId","handleChangeSelectedId","id","contextValue","Provider","value","TopNav","textProps","component","use","htmlProps","attach","displayName"],"mappings":"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","sourcesContent":["import { createContext, useState, useCallback, useMemo, createElement as createElement$1 } from 'react';\nimport '../Provider/ThemeContext.js';\nimport 'classnames';\nimport '@emotion/css';\nimport '@emotion/react';\nimport '@emotion/styled';\nimport '../utils/useTheme.js';\nimport 'conditional-wrap';\nimport '../utils/useLocalStorage.js';\nimport { b as _objectWithoutPropertiesLoose, _ as _objectSpread2 } from '../_rollupPluginBabelHelpers.js';\nimport '../utils/omit.js';\nimport '../ColorMode/utils.js';\nimport '../ColorMode/ColorModeContext.js';\nimport '../utils/pick.js';\nimport '../utils/cssProps.js';\nimport 'lodash/kebabCase';\nimport 'tinycolor2';\nimport '../getCSSFromStyleObject.js';\nimport '../utils/isFunction.js';\nimport '../utils/get.js';\nimport '../utils/useStyle.js';\nimport '../utils/omitBy.js';\nimport '../utils/useDefaultProps.js';\nimport 'lodash/uniq';\nimport { useClassName } from '../utils/useClassName.js';\nimport 'reakit/Id';\nimport '../utils/mergeRefs.js';\nimport 'deepmerge';\nimport 'lodash/set';\nimport { createComponent } from '../utils/createComponent.js';\nimport { createElement } from '../utils/createElement.js';\nimport { createHook } from '../utils/createHook.js';\nimport 'lodash/get';\nimport 'capsize';\nimport '@emotion/is-prop-valid';\nimport '../utils/htmlProps.js';\nimport '../utils/OutsideClickHandler.js';\nimport { Box } from 'reakit';\nimport '../Box.styles.js';\nimport '../Box/Box.js';\nimport '../Navigation.styles.js';\nimport { Navigation } from '../Navigation/Navigation.js';\nimport { a as TopNav$1 } from '../TopNav.styles.js';\n\nvar TopNavContext = createContext({\n  onChangeSelectedId: function onChangeSelectedId() {},\n  selectedId: undefined,\n  overrides: {}\n});\nvar useProps = createHook(function (props, _ref) {\n  var themeKey = _ref.themeKey;\n\n  var children = props.children,\n      defaultSelectedId = props.defaultSelectedId,\n      onChange = props.onChange,\n      overrides = props.overrides,\n      _selectedId = props.selectedId,\n      restProps = _objectWithoutPropertiesLoose(props, [\"children\", \"defaultSelectedId\", \"onChange\", \"overrides\", \"selectedId\"]);\n\n  var navigationProps = Navigation.useProps(restProps);\n  var className = useClassName({\n    style: TopNav$1,\n    styleProps: props,\n    themeKey: themeKey,\n    prevClassName: navigationProps.className\n  });\n\n  var _React$useState = useState(defaultSelectedId || ''),\n      selectedId = _React$useState[0],\n      setSelectedId = _React$useState[1];\n\n  var handleChangeSelectedId = useCallback(function (id) {\n    if (onChange) {\n      onChange(id);\n    } else {\n      setSelectedId(id || '');\n    }\n  }, [onChange]);\n  var contextValue = useMemo(function () {\n    return {\n      onChangeSelectedId: handleChangeSelectedId,\n      selectedId: _selectedId || selectedId,\n      overrides: overrides\n    };\n  }, [_selectedId, handleChangeSelectedId, overrides, selectedId]);\n  return _objectSpread2(_objectSpread2({}, navigationProps), {}, {\n    className: className,\n    children: /*#__PURE__*/createElement$1(TopNavContext.Provider, {\n      value: contextValue\n    }, children)\n  });\n}, {\n  themeKey: 'TopNav'\n});\nvar TopNav = createComponent(function (props) {\n  var textProps = useProps(props);\n  return createElement({\n    children: props.children,\n    component: Box,\n    use: props.use,\n    htmlProps: textProps\n  });\n}, {\n  attach: {\n    useProps: useProps,\n    displayName: 'TopNav'\n  },\n  themeKey: 'TopNav'\n});\n\nexport { TopNav, TopNavContext };\n"]},"metadata":{},"sourceType":"module"}