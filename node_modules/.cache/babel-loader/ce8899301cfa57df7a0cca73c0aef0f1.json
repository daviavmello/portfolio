{"ast":null,"code":"import { useRef, useEffect } from 'react';\nimport '../Provider/ThemeContext.js';\nimport 'classnames';\nimport '@emotion/css';\nimport '@emotion/react';\nimport '@emotion/styled';\nimport '../utils/useTheme.js';\nimport 'conditional-wrap';\nimport '../utils/useLocalStorage.js';\nimport { _ as _objectSpread2 } from '../_rollupPluginBabelHelpers.js';\nimport '../utils/omit.js';\nimport '../ColorMode/utils.js';\nimport '../ColorMode/ColorModeContext.js';\nimport '../utils/pick.js';\nimport '../utils/cssProps.js';\nimport 'lodash/kebabCase';\nimport 'tinycolor2';\nimport '../getCSSFromStyleObject.js';\nimport '../utils/isFunction.js';\nimport '../utils/get.js';\nimport '../utils/useStyle.js';\nimport '../utils/omitBy.js';\nimport '../utils/useDefaultProps.js';\nimport 'lodash/uniq';\nimport { useClassName } from '../utils/useClassName.js';\nimport 'reakit/Id';\nimport '../utils/mergeRefs.js';\nimport 'deepmerge';\nimport 'lodash/set';\nimport { createComponent } from '../utils/createComponent.js';\nimport { createElement } from '../utils/createElement.js';\nimport { createHook } from '../utils/createHook.js';\nimport 'lodash/get';\nimport 'capsize';\nimport '@emotion/is-prop-valid';\nimport '../utils/htmlProps.js';\nimport '../utils/OutsideClickHandler.js';\nimport { Box } from 'reakit';\nimport '../Box.styles.js';\nimport { Box as Box$1 } from '../Box/Box.js';\nimport { a as Badge$1 } from '../Badge.styles.js';\nvar useProps = createHook(function (props, _ref) {\n  var themeKey = _ref.themeKey;\n  var ref = useRef();\n  var boxProps = Box$1.useProps(_objectSpread2(_objectSpread2({}, props), {}, {\n    ref: ref\n  }));\n  var className = useClassName({\n    style: Badge$1,\n    styleProps: props,\n    themeKey: themeKey,\n    prevClassName: boxProps.className\n  });\n  useEffect(function () {\n    if (ref && ref.current) {\n      // @ts-ignore\n      var parentElement = ref.current.parentElement;\n      parentElement.setAttribute('style', 'position:relative;');\n    }\n  }, []);\n  return _objectSpread2(_objectSpread2({}, boxProps), {}, {\n    className: className\n  });\n}, {\n  defaultProps: {\n    palette: 'primary'\n  },\n  themeKey: 'Badge'\n});\nvar Badge = createComponent(function (props) {\n  var badgeProps = useProps(props);\n  return createElement({\n    children: props.children,\n    component: Box,\n    use: props.use,\n    htmlProps: badgeProps\n  });\n}, {\n  attach: {\n    useProps: useProps,\n    displayName: 'Badge'\n  },\n  defaultProps: {},\n  themeKey: 'Badge'\n});\nexport { Badge };","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio/node_modules/bumbag/es/Badge/Badge.js"],"names":["useRef","useEffect","_","_objectSpread2","useClassName","createComponent","createElement","createHook","Box","Box$1","a","Badge$1","useProps","props","_ref","themeKey","ref","boxProps","className","style","styleProps","prevClassName","current","parentElement","setAttribute","defaultProps","palette","Badge","badgeProps","children","component","use","htmlProps","attach","displayName"],"mappings":"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","sourcesContent":["import { useRef, useEffect } from 'react';\nimport '../Provider/ThemeContext.js';\nimport 'classnames';\nimport '@emotion/css';\nimport '@emotion/react';\nimport '@emotion/styled';\nimport '../utils/useTheme.js';\nimport 'conditional-wrap';\nimport '../utils/useLocalStorage.js';\nimport { _ as _objectSpread2 } from '../_rollupPluginBabelHelpers.js';\nimport '../utils/omit.js';\nimport '../ColorMode/utils.js';\nimport '../ColorMode/ColorModeContext.js';\nimport '../utils/pick.js';\nimport '../utils/cssProps.js';\nimport 'lodash/kebabCase';\nimport 'tinycolor2';\nimport '../getCSSFromStyleObject.js';\nimport '../utils/isFunction.js';\nimport '../utils/get.js';\nimport '../utils/useStyle.js';\nimport '../utils/omitBy.js';\nimport '../utils/useDefaultProps.js';\nimport 'lodash/uniq';\nimport { useClassName } from '../utils/useClassName.js';\nimport 'reakit/Id';\nimport '../utils/mergeRefs.js';\nimport 'deepmerge';\nimport 'lodash/set';\nimport { createComponent } from '../utils/createComponent.js';\nimport { createElement } from '../utils/createElement.js';\nimport { createHook } from '../utils/createHook.js';\nimport 'lodash/get';\nimport 'capsize';\nimport '@emotion/is-prop-valid';\nimport '../utils/htmlProps.js';\nimport '../utils/OutsideClickHandler.js';\nimport { Box } from 'reakit';\nimport '../Box.styles.js';\nimport { Box as Box$1 } from '../Box/Box.js';\nimport { a as Badge$1 } from '../Badge.styles.js';\n\nvar useProps = createHook(function (props, _ref) {\n  var themeKey = _ref.themeKey;\n  var ref = useRef();\n  var boxProps = Box$1.useProps(_objectSpread2(_objectSpread2({}, props), {}, {\n    ref: ref\n  }));\n  var className = useClassName({\n    style: Badge$1,\n    styleProps: props,\n    themeKey: themeKey,\n    prevClassName: boxProps.className\n  });\n  useEffect(function () {\n    if (ref && ref.current) {\n      // @ts-ignore\n      var parentElement = ref.current.parentElement;\n      parentElement.setAttribute('style', 'position:relative;');\n    }\n  }, []);\n  return _objectSpread2(_objectSpread2({}, boxProps), {}, {\n    className: className\n  });\n}, {\n  defaultProps: {\n    palette: 'primary'\n  },\n  themeKey: 'Badge'\n});\nvar Badge = createComponent(function (props) {\n  var badgeProps = useProps(props);\n  return createElement({\n    children: props.children,\n    component: Box,\n    use: props.use,\n    htmlProps: badgeProps\n  });\n}, {\n  attach: {\n    useProps: useProps,\n    displayName: 'Badge'\n  },\n  defaultProps: {},\n  themeKey: 'Badge'\n});\n\nexport { Badge };\n"]},"metadata":{},"sourceType":"module"}