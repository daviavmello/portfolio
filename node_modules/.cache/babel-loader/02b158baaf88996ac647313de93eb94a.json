{"ast":null,"code":"var _jsxFileName = \"/Users/davimello/Creative Cloud Files/Davi/code/portfolio/src/components/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Input, Flex, Heading, Container, Columns, Textarea, Stack, Modal, Card, Box, Button } from \"bumbag\";\nimport emailjs from \"emailjs-com\";\nimport { Users } from \"react-feather\";\nimport ButtonUI from \"./ButtonUI\";\nimport { Formik, Form, Field } from \"formik\";\nimport ModalPopup from \"./ModalPopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const [showButton, setShowButton] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    if (name.length > 0 && email.length > 0 && message.length > 0) {\n      setShowButton(true);\n    } else {\n      setShowButton(false);\n    }\n  }, [email, message, name]);\n  console.log(name, message, email);\n\n  const sendEmail = values => {\n    if (!values.name) {\n      alert(\"Please enter your name.\");\n    }\n\n    if (!values.email) {\n      alert(\"Please enter your email.\");\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      alert(\"Please enter a valid email.\");\n    }\n\n    if (!values.message) {\n      alert(\"Please enter a message.\");\n    }\n\n    emailjs.send(\"service_eq4k8nu\", \"template_d7xhn8q\", values, \"user_PXcI30CjdFLTla1cHZFoV\").then(result => {\n      console.log(result.text);\n      setShowModal(true);\n    }, error => {\n      console.log(error.text);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    padding: \"2rem 1rem\",\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      display: {\n        default: \"flex\",\n        \"max-tablet\": \"block\"\n      },\n      alignX: \"center\",\n      alignY: \"center\",\n      alignItems: \"baseline\",\n      children: [/*#__PURE__*/_jsxDEV(Columns.Column, {\n        spread: 6,\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          use: \"h4\",\n          fontWeight: {\n            default: \"semibold\",\n            \"max-tablet\": \"bold\"\n          },\n          paddingBottom: {\n            default: \"0rem\",\n            \"max-tablet\": \"2rem\"\n          },\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Columns.Column, {\n        spread: 6,\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            name: \"\",\n            email: \"\",\n            message: \"\"\n          },\n          onSubmit: values => sendEmail(values),\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: \"major-6\",\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                component: Input.Formik,\n                onChange: e => setName(e.target.value),\n                variant: \"underline\",\n                name: \"name\",\n                type: \"text\",\n                label: \"Name\",\n                color: \"contrast\",\n                style: {\n                  background: \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                component: Input.Formik,\n                onChange: e => setEmail(e.target.value),\n                variant: \"underline\",\n                name: \"email\",\n                type: \"email\",\n                label: \"Email\",\n                color: \"contrast\",\n                style: {\n                  background: \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                component: Textarea.Formik,\n                onChange: e => setMessage(e.target.value),\n                variant: \"underline\",\n                name: \"message\",\n                type: \"text\",\n                placeholder: \"Message\",\n                spellCheck: true,\n                color: \"contrast\",\n                style: {\n                  background: \"none\",\n                  padding: \"4rem 0 0 0\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Modal.State, {\n                animated: true,\n                children: [/*#__PURE__*/_jsxDEV(Modal.Disclosure, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                  fade: true,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      children: \"Hello world\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Modal.Disclosure, {\n                      use: Button,\n                      children: \"Close\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contact, \"rrjZZAfGwJacvTUXLcUN3fgDzhI=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio/src/components/Contact.js"],"names":["React","useState","useEffect","useRef","Input","Flex","Heading","Container","Columns","Textarea","Stack","Modal","Card","Box","Button","emailjs","Users","ButtonUI","Formik","Form","Field","ModalPopup","Contact","showButton","setShowButton","showModal","setShowModal","name","setName","email","setEmail","message","setMessage","length","console","log","sendEmail","values","alert","test","send","then","result","text","error","default","e","target","value","background","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Input,\n  Flex,\n  Heading,\n  Container,\n  Columns,\n  Textarea,\n  Stack,\n  Modal,\n  Card,\n  Box,\n  Button,\n} from \"bumbag\";\nimport emailjs from \"emailjs-com\";\n\nimport { Users } from \"react-feather\";\nimport ButtonUI from \"./ButtonUI\";\nimport { Formik, Form, Field } from \"formik\";\nimport ModalPopup from \"./ModalPopup\";\n\nconst Contact = () => {\n  const [showButton, setShowButton] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (name.length > 0 && email.length > 0 && message.length > 0) {\n      setShowButton(true);\n    } else {\n      setShowButton(false);\n    }\n  }, [email, message, name]);\n  console.log(name, message, email);\n\n  const sendEmail = (values) => {\n    if (!values.name) {\n      alert(\"Please enter your name.\");\n    }\n    if (!values.email) {\n      alert(\"Please enter your email.\");\n    } else if (\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n    ) {\n      alert(\"Please enter a valid email.\");\n    }\n    if (!values.message) {\n      alert(\"Please enter a message.\");\n    }\n\n    emailjs\n      .send(\n        \"service_eq4k8nu\",\n        \"template_d7xhn8q\",\n        values,\n        \"user_PXcI30CjdFLTla1cHZFoV\"\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n          setShowModal(true);\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n  };\n\n  return (\n    <Container padding=\"2rem 1rem\">\n      <Flex\n        display={{ default: \"flex\", \"max-tablet\": \"block\" }}\n        alignX=\"center\"\n        alignY=\"center\"\n        alignItems=\"baseline\"\n      >\n        <Columns.Column spread={6}>\n          <Heading\n            use=\"h4\"\n            fontWeight={{ default: \"semibold\", \"max-tablet\": \"bold\" }}\n            paddingBottom={{ default: \"0rem\", \"max-tablet\": \"2rem\" }}\n          >\n            Contact\n          </Heading>\n        </Columns.Column>\n        <Columns.Column spread={6}>\n          <Formik\n            initialValues={{ name: \"\", email: \"\", message: \"\" }}\n            onSubmit={(values) => sendEmail(values)}\n          >\n            <Form>\n              {/* {showModal && <ModalPopup showModal={showModal} />} */}\n              {/* <ModalPopup showModal={showModal} /> */}\n              <Stack spacing=\"major-6\">\n                <Field\n                  component={Input.Formik}\n                  onChange={(e) => setName(e.target.value)}\n                  variant=\"underline\"\n                  name=\"name\"\n                  type=\"text\"\n                  label=\"Name\"\n                  color=\"contrast\"\n                  style={{\n                    background: \"none\",\n                  }}\n                />\n                <Field\n                  component={Input.Formik}\n                  onChange={(e) => setEmail(e.target.value)}\n                  variant=\"underline\"\n                  name=\"email\"\n                  type=\"email\"\n                  label=\"Email\"\n                  color=\"contrast\"\n                  style={{\n                    background: \"none\",\n                  }}\n                />\n                <Field\n                  component={Textarea.Formik}\n                  onChange={(e) => setMessage(e.target.value)}\n                  variant=\"underline\"\n                  name=\"message\"\n                  type=\"text\"\n                  placeholder=\"Message\"\n                  spellCheck={true}\n                  color=\"contrast\"\n                  style={{\n                    background: \"none\",\n                    padding: \"4rem 0 0 0\",\n                  }}\n                />\n                <Modal.State animated>\n                  <Modal.Disclosure>\n                    \n                  </Modal.Disclosure>\n                  <Modal fade>\n                    <Card>\n                      <Box>Hello world</Box>\n                      <Modal.Disclosure use={Button}>Close</Modal.Disclosure>\n                    </Card>\n                  </Modal>\n                </Modal.State>\n              </Stack>\n            </Form>\n          </Formik>\n        </Columns.Column>\n      </Flex>\n    </Container>\n  );\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}