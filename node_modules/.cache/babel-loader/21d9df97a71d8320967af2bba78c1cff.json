{"ast":null,"code":"import { createContext, useMemo, createElement } from 'react';\nimport '../Provider/ThemeContext.js';\nimport 'classnames';\nimport 'emotion';\nimport '@emotion/core';\nimport 'emotion-theming';\nimport '@emotion/styled';\nimport '../utils/useTheme.js';\nimport '../utils/useLocalStorage.js';\nimport { d as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers.js';\nimport '../utils/omit.js';\nimport '../ColorMode/utils.js';\nimport '../ColorMode/ColorModeContext.js';\nimport 'lodash/kebabCase';\nimport 'tinycolor2';\nimport { isFunction } from '../utils/isFunction.js';\nimport 'lodash/uniq';\nimport 'reakit/Id';\nimport 'deepmerge';\nimport 'lodash/set';\nimport 'capsize';\nimport '@emotion/is-prop-valid';\nimport '../utils/OutsideClickHandler.js';\nimport { useDialogState } from 'reakit';\nvar ModalContext = createContext({\n  modal: {}\n});\n\nfunction useModalState(initialState) {\n  return useDialogState(initialState);\n}\n\nfunction ModalState(props) {\n  var children = props.children,\n      restProps = _objectWithoutPropertiesLoose(props, [\"children\"]);\n\n  var modal = useModalState(restProps);\n  var contextValue = useMemo(function () {\n    return {\n      modal: modal\n    };\n  }, [modal]);\n  return /*#__PURE__*/createElement(ModalContext.Provider, {\n    value: contextValue\n  }, isFunction(props.children) ? props.children(modal) : props.children);\n}\n\nexport { ModalContext, ModalState, useModalState };","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio/node_modules/bumbag/es/Modal/ModalState.js"],"names":["createContext","useMemo","createElement","d","_objectWithoutPropertiesLoose","isFunction","useDialogState","ModalContext","modal","useModalState","initialState","ModalState","props","children","restProps","contextValue","Provider","value"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,OAAxB,EAAiCC,aAAjC,QAAsD,OAAtD;AACA,OAAO,6BAAP;AACA,OAAO,YAAP;AACA,OAAO,SAAP;AACA,OAAO,eAAP;AACA,OAAO,iBAAP;AACA,OAAO,iBAAP;AACA,OAAO,sBAAP;AACA,OAAO,6BAAP;AACA,SAASC,CAAC,IAAIC,6BAAd,QAAmD,iCAAnD;AACA,OAAO,kBAAP;AACA,OAAO,uBAAP;AACA,OAAO,kCAAP;AACA,OAAO,kBAAP;AACA,OAAO,YAAP;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAO,aAAP;AACA,OAAO,WAAP;AACA,OAAO,WAAP;AACA,OAAO,YAAP;AACA,OAAO,SAAP;AACA,OAAO,wBAAP;AACA,OAAO,iCAAP;AACA,SAASC,cAAT,QAA+B,QAA/B;AAEA,IAAIC,YAAY,GAAGP,aAAa,CAAC;AAC/BQ,EAAAA,KAAK,EAAE;AADwB,CAAD,CAAhC;;AAGA,SAASC,aAAT,CAAuBC,YAAvB,EAAqC;AACnC,SAAOJ,cAAc,CAACI,YAAD,CAArB;AACD;;AACD,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,SAAS,GAAGV,6BAA6B,CAACQ,KAAD,EAAQ,CAAC,UAAD,CAAR,CAD7C;;AAGA,MAAIJ,KAAK,GAAGC,aAAa,CAACK,SAAD,CAAzB;AACA,MAAIC,YAAY,GAAGd,OAAO,CAAC,YAAY;AACrC,WAAO;AACLO,MAAAA,KAAK,EAAEA;AADF,KAAP;AAGD,GAJyB,EAIvB,CAACA,KAAD,CAJuB,CAA1B;AAKA,SAAO,aAAaN,aAAa,CAACK,YAAY,CAACS,QAAd,EAAwB;AACvDC,IAAAA,KAAK,EAAEF;AADgD,GAAxB,EAE9BV,UAAU,CAACO,KAAK,CAACC,QAAP,CAAV,GAA6BD,KAAK,CAACC,QAAN,CAAeL,KAAf,CAA7B,GAAqDI,KAAK,CAACC,QAF7B,CAAjC;AAGD;;AAED,SAASN,YAAT,EAAuBI,UAAvB,EAAmCF,aAAnC","sourcesContent":["import { createContext, useMemo, createElement } from 'react';\nimport '../Provider/ThemeContext.js';\nimport 'classnames';\nimport 'emotion';\nimport '@emotion/core';\nimport 'emotion-theming';\nimport '@emotion/styled';\nimport '../utils/useTheme.js';\nimport '../utils/useLocalStorage.js';\nimport { d as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers.js';\nimport '../utils/omit.js';\nimport '../ColorMode/utils.js';\nimport '../ColorMode/ColorModeContext.js';\nimport 'lodash/kebabCase';\nimport 'tinycolor2';\nimport { isFunction } from '../utils/isFunction.js';\nimport 'lodash/uniq';\nimport 'reakit/Id';\nimport 'deepmerge';\nimport 'lodash/set';\nimport 'capsize';\nimport '@emotion/is-prop-valid';\nimport '../utils/OutsideClickHandler.js';\nimport { useDialogState } from 'reakit';\n\nvar ModalContext = createContext({\n  modal: {}\n});\nfunction useModalState(initialState) {\n  return useDialogState(initialState);\n}\nfunction ModalState(props) {\n  var children = props.children,\n      restProps = _objectWithoutPropertiesLoose(props, [\"children\"]);\n\n  var modal = useModalState(restProps);\n  var contextValue = useMemo(function () {\n    return {\n      modal: modal\n    };\n  }, [modal]);\n  return /*#__PURE__*/createElement(ModalContext.Provider, {\n    value: contextValue\n  }, isFunction(props.children) ? props.children(modal) : props.children);\n}\n\nexport { ModalContext, ModalState, useModalState };\n"]},"metadata":{},"sourceType":"module"}