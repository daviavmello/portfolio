{"ast":null,"code":"import { useMemo } from 'react';\nimport '../Provider/ThemeContext.js';\nimport 'classnames';\nimport 'emotion';\nimport '@emotion/core';\nimport 'emotion-theming';\nimport '@emotion/styled';\nimport { useTheme } from './useTheme.js';\nimport './useLocalStorage.js';\nimport '../_rollupPluginBabelHelpers.js';\nimport './omit.js';\nimport '../ColorMode/utils.js';\nimport { useColorMode } from '../ColorMode/ColorModeContext.js';\nimport './pick.js';\nimport { pickCSSProps } from './cssProps.js';\nimport 'lodash/kebabCase';\nimport 'tinycolor2';\nimport './isFunction.js';\nimport './get.js';\nimport { g as getCSSFromStyleObject } from '../getCSSFromStyleObject.js';\n\nfunction useStyle(props, _ref) {\n  var disableCSSProps = _ref.disableCSSProps;\n\n  var _useTheme = useTheme(),\n      theme = _useTheme.theme;\n\n  var _useColorMode = useColorMode(),\n      globalColorMode = _useColorMode.colorMode;\n\n  var cssProps = pickCSSProps(props);\n  var colorMode = props.colorMode || globalColorMode;\n  return useMemo(function () {\n    return getCSSFromStyleObject(cssProps, theme, colorMode, {\n      fromProps: true,\n      disableCSSProps: disableCSSProps\n    });\n  }, [cssProps, theme, colorMode, disableCSSProps]);\n}\n\nexport { useStyle };","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio/node_modules/bumbag/es/utils/useStyle.js"],"names":["useMemo","useTheme","useColorMode","pickCSSProps","g","getCSSFromStyleObject","useStyle","props","_ref","disableCSSProps","_useTheme","theme","_useColorMode","globalColorMode","colorMode","cssProps","fromProps"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,OAAO,6BAAP;AACA,OAAO,YAAP;AACA,OAAO,SAAP;AACA,OAAO,eAAP;AACA,OAAO,iBAAP;AACA,OAAO,iBAAP;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAO,sBAAP;AACA,OAAO,iCAAP;AACA,OAAO,WAAP;AACA,OAAO,uBAAP;AACA,SAASC,YAAT,QAA6B,kCAA7B;AACA,OAAO,WAAP;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAO,kBAAP;AACA,OAAO,YAAP;AACA,OAAO,iBAAP;AACA,OAAO,UAAP;AACA,SAASC,CAAC,IAAIC,qBAAd,QAA2C,6BAA3C;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,IAAzB,EAA+B;AAC7B,MAAIC,eAAe,GAAGD,IAAI,CAACC,eAA3B;;AAEA,MAAIC,SAAS,GAAGT,QAAQ,EAAxB;AAAA,MACIU,KAAK,GAAGD,SAAS,CAACC,KADtB;;AAGA,MAAIC,aAAa,GAAGV,YAAY,EAAhC;AAAA,MACIW,eAAe,GAAGD,aAAa,CAACE,SADpC;;AAGA,MAAIC,QAAQ,GAAGZ,YAAY,CAACI,KAAD,CAA3B;AACA,MAAIO,SAAS,GAAGP,KAAK,CAACO,SAAN,IAAmBD,eAAnC;AACA,SAAOb,OAAO,CAAC,YAAY;AACzB,WAAOK,qBAAqB,CAACU,QAAD,EAAWJ,KAAX,EAAkBG,SAAlB,EAA6B;AACvDE,MAAAA,SAAS,EAAE,IAD4C;AAEvDP,MAAAA,eAAe,EAAEA;AAFsC,KAA7B,CAA5B;AAID,GALa,EAKX,CAACM,QAAD,EAAWJ,KAAX,EAAkBG,SAAlB,EAA6BL,eAA7B,CALW,CAAd;AAMD;;AAED,SAASH,QAAT","sourcesContent":["import { useMemo } from 'react';\nimport '../Provider/ThemeContext.js';\nimport 'classnames';\nimport 'emotion';\nimport '@emotion/core';\nimport 'emotion-theming';\nimport '@emotion/styled';\nimport { useTheme } from './useTheme.js';\nimport './useLocalStorage.js';\nimport '../_rollupPluginBabelHelpers.js';\nimport './omit.js';\nimport '../ColorMode/utils.js';\nimport { useColorMode } from '../ColorMode/ColorModeContext.js';\nimport './pick.js';\nimport { pickCSSProps } from './cssProps.js';\nimport 'lodash/kebabCase';\nimport 'tinycolor2';\nimport './isFunction.js';\nimport './get.js';\nimport { g as getCSSFromStyleObject } from '../getCSSFromStyleObject.js';\n\nfunction useStyle(props, _ref) {\n  var disableCSSProps = _ref.disableCSSProps;\n\n  var _useTheme = useTheme(),\n      theme = _useTheme.theme;\n\n  var _useColorMode = useColorMode(),\n      globalColorMode = _useColorMode.colorMode;\n\n  var cssProps = pickCSSProps(props);\n  var colorMode = props.colorMode || globalColorMode;\n  return useMemo(function () {\n    return getCSSFromStyleObject(cssProps, theme, colorMode, {\n      fromProps: true,\n      disableCSSProps: disableCSSProps\n    });\n  }, [cssProps, theme, colorMode, disableCSSProps]);\n}\n\nexport { useStyle };\n"]},"metadata":{},"sourceType":"module"}