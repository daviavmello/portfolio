{"ast":null,"code":"import { useRef, useEffect } from 'react';\n\nfunction usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  var ref = useRef(); // Store current value in ref\n\n  useEffect(function () {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n\n  return ref.current;\n}\n\nexport { usePrevious };","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio/node_modules/bumbag/es/utils/usePrevious.js"],"names":["useRef","useEffect","usePrevious","value","ref","current"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B;AACA;AACA,MAAIC,GAAG,GAAGJ,MAAM,EAAhB,CAH0B,CAGN;;AAEpBC,EAAAA,SAAS,CAAC,YAAY;AACpBG,IAAAA,GAAG,CAACC,OAAJ,GAAcF,KAAd;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT,CAL0B,CAOb;AACb;;AAEA,SAAOC,GAAG,CAACC,OAAX;AACD;;AAED,SAASH,WAAT","sourcesContent":["import { useRef, useEffect } from 'react';\n\nfunction usePrevious(value) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  var ref = useRef(); // Store current value in ref\n\n  useEffect(function () {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n\n  return ref.current;\n}\n\nexport { usePrevious };\n"]},"metadata":{},"sourceType":"module"}