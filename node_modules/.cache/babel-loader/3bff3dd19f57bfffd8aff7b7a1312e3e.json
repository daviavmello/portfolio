{"ast":null,"code":"import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport { useCallback } from 'react';\nimport 'reakit-utils/useForkRef';\nimport 'reakit-utils/isButton';\nimport 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/isPortalEvent';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport '../Role/Role.js';\nimport '../Tabbable/Tabbable.js';\nimport '../Clickable/Clickable.js';\nimport { useButton } from '../Button/Button.js';\nimport { D as DISCLOSURE_KEYS } from '../__keys-e6a5cfbe.js';\nvar useDisclosure = createHook({\n  name: \"Disclosure\",\n  compose: useButton,\n  keys: DISCLOSURE_KEYS,\n  useProps: function useProps(options, _ref) {\n    var htmlOnClick = _ref.onClick,\n        ariaControls = _ref[\"aria-controls\"],\n        htmlProps = _objectWithoutPropertiesLoose(_ref, [\"onClick\", \"aria-controls\"]);\n\n    var onClickRef = useLiveRef(htmlOnClick);\n    var controls = ariaControls ? ariaControls + \" \" + options.baseId : options.baseId;\n    var onClick = useCallback(function (event) {\n      var _onClickRef$current, _options$toggle;\n\n      (_onClickRef$current = onClickRef.current) === null || _onClickRef$current === void 0 ? void 0 : _onClickRef$current.call(onClickRef, event);\n      if (event.defaultPrevented) return;\n      (_options$toggle = options.toggle) === null || _options$toggle === void 0 ? void 0 : _options$toggle.call(options);\n    }, [options.toggle]);\n    return _objectSpread2({\n      \"aria-expanded\": !!options.visible,\n      \"aria-controls\": controls,\n      onClick: onClick\n    }, htmlProps);\n  }\n});\nvar Disclosure = createComponent({\n  as: \"button\",\n  memo: true,\n  useHook: useDisclosure\n});\nexport { Disclosure, useDisclosure };","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio-react/node_modules/reakit/es/Disclosure/Disclosure.js"],"names":["_","_objectWithoutPropertiesLoose","a","_objectSpread2","createComponent","createHook","useCallback","useLiveRef","useButton","D","DISCLOSURE_KEYS","useDisclosure","name","compose","keys","useProps","options","_ref","htmlOnClick","onClick","ariaControls","htmlProps","onClickRef","controls","baseId","event","_onClickRef$current","_options$toggle","current","call","defaultPrevented","toggle","visible","Disclosure","as","memo","useHook"],"mappings":"AAAA,SAASA,CAAC,IAAIC,6BAAd,EAA6CC,CAAC,IAAIC,cAAlD,QAAwE,0CAAxE;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAO,2BAAP;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAO,yBAAP;AACA,OAAO,uBAAP;AACA,OAAO,gBAAP;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAO,2BAAP;AACA,OAAO,kCAAP;AACA,OAAO,6BAAP;AACA,OAAO,4BAAP;AACA,OAAO,+BAAP;AACA,OAAO,wBAAP;AACA,OAAO,uBAAP;AACA,OAAO,iBAAP;AACA,OAAO,yBAAP;AACA,OAAO,2BAAP;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,CAAC,IAAIC,eAAd,QAAqC,uBAArC;AAEA,IAAIC,aAAa,GAAGN,UAAU,CAAC;AAC7BO,EAAAA,IAAI,EAAE,YADuB;AAE7BC,EAAAA,OAAO,EAAEL,SAFoB;AAG7BM,EAAAA,IAAI,EAAEJ,eAHuB;AAI7BK,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,OAAlB,EAA2BC,IAA3B,EAAiC;AACzC,QAAIC,WAAW,GAAGD,IAAI,CAACE,OAAvB;AAAA,QACIC,YAAY,GAAGH,IAAI,CAAC,eAAD,CADvB;AAAA,QAEII,SAAS,GAAGpB,6BAA6B,CAACgB,IAAD,EAAO,CAAC,SAAD,EAAY,eAAZ,CAAP,CAF7C;;AAIA,QAAIK,UAAU,GAAGf,UAAU,CAACW,WAAD,CAA3B;AACA,QAAIK,QAAQ,GAAGH,YAAY,GAAGA,YAAY,GAAG,GAAf,GAAqBJ,OAAO,CAACQ,MAAhC,GAAyCR,OAAO,CAACQ,MAA5E;AACA,QAAIL,OAAO,GAAGb,WAAW,CAAC,UAAUmB,KAAV,EAAiB;AACzC,UAAIC,mBAAJ,EAAyBC,eAAzB;;AAEA,OAACD,mBAAmB,GAAGJ,UAAU,CAACM,OAAlC,MAA+C,IAA/C,IAAuDF,mBAAmB,KAAK,KAAK,CAApF,GAAwF,KAAK,CAA7F,GAAiGA,mBAAmB,CAACG,IAApB,CAAyBP,UAAzB,EAAqCG,KAArC,CAAjG;AACA,UAAIA,KAAK,CAACK,gBAAV,EAA4B;AAC5B,OAACH,eAAe,GAAGX,OAAO,CAACe,MAA3B,MAAuC,IAAvC,IAA+CJ,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqFA,eAAe,CAACE,IAAhB,CAAqBb,OAArB,CAArF;AACD,KANwB,EAMtB,CAACA,OAAO,CAACe,MAAT,CANsB,CAAzB;AAOA,WAAO5B,cAAc,CAAC;AACpB,uBAAiB,CAAC,CAACa,OAAO,CAACgB,OADP;AAEpB,uBAAiBT,QAFG;AAGpBJ,MAAAA,OAAO,EAAEA;AAHW,KAAD,EAIlBE,SAJkB,CAArB;AAKD;AAvB4B,CAAD,CAA9B;AAyBA,IAAIY,UAAU,GAAG7B,eAAe,CAAC;AAC/B8B,EAAAA,EAAE,EAAE,QAD2B;AAE/BC,EAAAA,IAAI,EAAE,IAFyB;AAG/BC,EAAAA,OAAO,EAAEzB;AAHsB,CAAD,CAAhC;AAMA,SAASsB,UAAT,EAAqBtB,aAArB","sourcesContent":["import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport { useCallback } from 'react';\nimport 'reakit-utils/useForkRef';\nimport 'reakit-utils/isButton';\nimport 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/isPortalEvent';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport '../Role/Role.js';\nimport '../Tabbable/Tabbable.js';\nimport '../Clickable/Clickable.js';\nimport { useButton } from '../Button/Button.js';\nimport { D as DISCLOSURE_KEYS } from '../__keys-e6a5cfbe.js';\n\nvar useDisclosure = createHook({\n  name: \"Disclosure\",\n  compose: useButton,\n  keys: DISCLOSURE_KEYS,\n  useProps: function useProps(options, _ref) {\n    var htmlOnClick = _ref.onClick,\n        ariaControls = _ref[\"aria-controls\"],\n        htmlProps = _objectWithoutPropertiesLoose(_ref, [\"onClick\", \"aria-controls\"]);\n\n    var onClickRef = useLiveRef(htmlOnClick);\n    var controls = ariaControls ? ariaControls + \" \" + options.baseId : options.baseId;\n    var onClick = useCallback(function (event) {\n      var _onClickRef$current, _options$toggle;\n\n      (_onClickRef$current = onClickRef.current) === null || _onClickRef$current === void 0 ? void 0 : _onClickRef$current.call(onClickRef, event);\n      if (event.defaultPrevented) return;\n      (_options$toggle = options.toggle) === null || _options$toggle === void 0 ? void 0 : _options$toggle.call(options);\n    }, [options.toggle]);\n    return _objectSpread2({\n      \"aria-expanded\": !!options.visible,\n      \"aria-controls\": controls,\n      onClick: onClick\n    }, htmlProps);\n  }\n});\nvar Disclosure = createComponent({\n  as: \"button\",\n  memo: true,\n  useHook: useDisclosure\n});\n\nexport { Disclosure, useDisclosure };\n"]},"metadata":{},"sourceType":"module"}