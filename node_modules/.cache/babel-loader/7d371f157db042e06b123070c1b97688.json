{"ast":null,"code":"import { _ as _objectSpread2 } from '../_rollupPluginBabelHelpers.js';\nimport { omit } from '../utils/omit.js';\nvar bodyClassPrefix = 'bb-mode';\nvar cssVariablePrefix = '--bb';\nvar palettePrefix = cssVariablePrefix + \"-palette\";\n\nfunction mapCSSVariables(obj) {\n  return Object.entries(obj).reduce(function (cssVariables, _ref) {\n    var _objectSpread2$1;\n\n    var key = _ref[0],\n        value = _ref[1];\n    return _objectSpread2(_objectSpread2({}, cssVariables), {}, (_objectSpread2$1 = {}, _objectSpread2$1[palettePrefix + \"-\" + key] = value, _objectSpread2$1));\n  }, {});\n}\n\nfunction getColorModesCSSVariables(theme) {\n  var _ref4;\n\n  if (!theme.palette) {\n    var _ref2;\n\n    return _ref2 = {}, _ref2[theme.cssVariablesSelector] = {}, _ref2;\n  }\n\n  var cssVariables = mapCSSVariables(omit(theme.palette, 'modes'));\n  cssVariables = Object.entries(theme.palette.modes || {}).reduce(function (cssVariables, _ref3) {\n    var _objectSpread3;\n\n    var modeKey = _ref3[0],\n        value = _ref3[1];\n    return _objectSpread2(_objectSpread2({}, cssVariables), {}, (_objectSpread3 = {}, _objectSpread3[\"&.\" + bodyClassPrefix + \"-\" + modeKey] = mapCSSVariables(value), _objectSpread3));\n  }, cssVariables);\n  return _ref4 = {}, _ref4[theme.cssVariablesSelector] = _objectSpread2({}, cssVariables), _ref4;\n}\n\nfunction getColorFromCSSVariable(selector, fallback) {\n  return \"var(\" + palettePrefix + \"-\" + selector + \", \" + fallback + \")\";\n}\n\nfunction addColorModeBodyClassName(nextMode, prevMode) {\n  if (typeof window !== 'undefined' && window.document && window.document.body) {\n    if (prevMode) {\n      document.body.classList.remove(bodyClassPrefix + \"-\" + prevMode);\n    }\n\n    document.body.classList.add(bodyClassPrefix + \"-\" + nextMode);\n  }\n}\n\nfunction getDefaultColorMode(mode, _ref5) {\n  var localStorage = _ref5.localStorage,\n      theme = _ref5.theme;\n\n  var _ref6 = theme.modes || {},\n      useSystemColorMode = _ref6.useSystemColorMode;\n\n  var defaultMode = mode;\n\n  if (typeof window !== 'undefined') {\n    if (useSystemColorMode && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      defaultMode = 'dark';\n    }\n\n    if (localStorage.get('mode')) {\n      defaultMode = localStorage.get('mode');\n    }\n  }\n\n  return defaultMode;\n}\n\nexport { addColorModeBodyClassName, getColorFromCSSVariable, getColorModesCSSVariables, getDefaultColorMode, mapCSSVariables };","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio/node_modules/bumbag/es/ColorMode/utils.js"],"names":["_","_objectSpread2","omit","bodyClassPrefix","cssVariablePrefix","palettePrefix","mapCSSVariables","obj","Object","entries","reduce","cssVariables","_ref","_objectSpread2$1","key","value","getColorModesCSSVariables","theme","_ref4","palette","_ref2","cssVariablesSelector","modes","_ref3","_objectSpread3","modeKey","getColorFromCSSVariable","selector","fallback","addColorModeBodyClassName","nextMode","prevMode","window","document","body","classList","remove","add","getDefaultColorMode","mode","_ref5","localStorage","_ref6","useSystemColorMode","defaultMode","matchMedia","matches","get"],"mappings":"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","sourcesContent":["import { _ as _objectSpread2 } from '../_rollupPluginBabelHelpers.js';\nimport { omit } from '../utils/omit.js';\n\nvar bodyClassPrefix = 'bb-mode';\nvar cssVariablePrefix = '--bb';\nvar palettePrefix = cssVariablePrefix + \"-palette\";\nfunction mapCSSVariables(obj) {\n  return Object.entries(obj).reduce(function (cssVariables, _ref) {\n    var _objectSpread2$1;\n\n    var key = _ref[0],\n        value = _ref[1];\n    return _objectSpread2(_objectSpread2({}, cssVariables), {}, (_objectSpread2$1 = {}, _objectSpread2$1[palettePrefix + \"-\" + key] = value, _objectSpread2$1));\n  }, {});\n}\nfunction getColorModesCSSVariables(theme) {\n  var _ref4;\n\n  if (!theme.palette) {\n    var _ref2;\n\n    return _ref2 = {}, _ref2[theme.cssVariablesSelector] = {}, _ref2;\n  }\n\n  var cssVariables = mapCSSVariables(omit(theme.palette, 'modes'));\n  cssVariables = Object.entries(theme.palette.modes || {}).reduce(function (cssVariables, _ref3) {\n    var _objectSpread3;\n\n    var modeKey = _ref3[0],\n        value = _ref3[1];\n    return _objectSpread2(_objectSpread2({}, cssVariables), {}, (_objectSpread3 = {}, _objectSpread3[\"&.\" + bodyClassPrefix + \"-\" + modeKey] = mapCSSVariables(value), _objectSpread3));\n  }, cssVariables);\n  return _ref4 = {}, _ref4[theme.cssVariablesSelector] = _objectSpread2({}, cssVariables), _ref4;\n}\nfunction getColorFromCSSVariable(selector, fallback) {\n  return \"var(\" + palettePrefix + \"-\" + selector + \", \" + fallback + \")\";\n}\nfunction addColorModeBodyClassName(nextMode, prevMode) {\n  if (typeof window !== 'undefined' && window.document && window.document.body) {\n    if (prevMode) {\n      document.body.classList.remove(bodyClassPrefix + \"-\" + prevMode);\n    }\n\n    document.body.classList.add(bodyClassPrefix + \"-\" + nextMode);\n  }\n}\nfunction getDefaultColorMode(mode, _ref5) {\n  var localStorage = _ref5.localStorage,\n      theme = _ref5.theme;\n\n  var _ref6 = theme.modes || {},\n      useSystemColorMode = _ref6.useSystemColorMode;\n\n  var defaultMode = mode;\n\n  if (typeof window !== 'undefined') {\n    if (useSystemColorMode && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      defaultMode = 'dark';\n    }\n\n    if (localStorage.get('mode')) {\n      defaultMode = localStorage.get('mode');\n    }\n  }\n\n  return defaultMode;\n}\n\nexport { addColorModeBodyClassName, getColorFromCSSVariable, getColorModesCSSVariables, getDefaultColorMode, mapCSSVariables };\n"]},"metadata":{},"sourceType":"module"}