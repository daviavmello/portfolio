{"ast":null,"code":"import 'classnames';\nimport 'emotion';\nimport '@emotion/core';\nimport 'emotion-theming';\nimport '@emotion/styled';\nimport { _ as _objectSpread2 } from '../_rollupPluginBabelHelpers.js';\nimport './omit.js';\nimport '../ColorMode/utils.js';\nimport './pick.js';\nimport './cssProps.js';\nimport 'lodash/kebabCase';\nimport 'tinycolor2';\nimport './isFunction.js';\nimport './get.js';\nimport '../getCSSFromStyleObject.js';\nimport { tint, shade, readableColor, lighten } from './colors.js';\n\nvar generateTextVariants = function generateTextVariants(textColor) {\n  return {\n    text100: lighten(0.2, textColor)(),\n    text200: lighten(0.15, textColor)(),\n    text300: lighten(0.1, textColor)(),\n    text400: lighten(0.05, textColor)(),\n    text: textColor,\n    textTint: tint(0.8, textColor)(),\n    textInverted: readableColor(textColor)(),\n    textTintInverted: shade(0.3, textColor)()\n  };\n};\n\nvar generateColorVariants = function generateColorVariants(_ref) {\n  var _objectSpread2$1;\n\n  var backgroundColor = _ref.backgroundColor,\n      color = _ref.color,\n      _ref$colorMode = _ref.colorMode,\n      colorMode = _ref$colorMode === void 0 ? 'default' : _ref$colorMode,\n      paletteKey = _ref.paletteKey,\n      paletteOverrides = _ref.paletteOverrides;\n  return _objectSpread2((_objectSpread2$1 = {}, _objectSpread2$1[paletteKey + \"100\"] = tint(0.7, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"200\"] = tint(0.5, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"300\"] = tint(0.3, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"400\"] = tint(0.1, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey] = color, _objectSpread2$1[paletteKey + \"500\"] = color, _objectSpread2$1[paletteKey + \"600\"] = shade(0.1, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"700\"] = shade(0.3, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"800\"] = shade(0.5, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"900\"] = shade(0.7, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"Shade\"] = shade(0.8, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"Tint\"] = tint(0.9, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"Inverted\"] = readableColor(color)(), _objectSpread2$1[paletteKey + \"ShadeInverted\"] = tint(0.7, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"TintInverted\"] = shade(0.5, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1), paletteOverrides ? paletteOverrides({\n    color: color\n  }) : {});\n};\n\nexport { generateColorVariants, generateTextVariants };","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio/node_modules/bumbag/es/utils/palette.js"],"names":["_","_objectSpread2","tint","shade","readableColor","lighten","generateTextVariants","textColor","text100","text200","text300","text400","text","textTint","textInverted","textTintInverted","generateColorVariants","_ref","_objectSpread2$1","backgroundColor","color","_ref$colorMode","colorMode","paletteKey","paletteOverrides"],"mappings":"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","sourcesContent":["import 'classnames';\nimport 'emotion';\nimport '@emotion/core';\nimport 'emotion-theming';\nimport '@emotion/styled';\nimport { _ as _objectSpread2 } from '../_rollupPluginBabelHelpers.js';\nimport './omit.js';\nimport '../ColorMode/utils.js';\nimport './pick.js';\nimport './cssProps.js';\nimport 'lodash/kebabCase';\nimport 'tinycolor2';\nimport './isFunction.js';\nimport './get.js';\nimport '../getCSSFromStyleObject.js';\nimport { tint, shade, readableColor, lighten } from './colors.js';\n\nvar generateTextVariants = function generateTextVariants(textColor) {\n  return {\n    text100: lighten(0.2, textColor)(),\n    text200: lighten(0.15, textColor)(),\n    text300: lighten(0.1, textColor)(),\n    text400: lighten(0.05, textColor)(),\n    text: textColor,\n    textTint: tint(0.8, textColor)(),\n    textInverted: readableColor(textColor)(),\n    textTintInverted: shade(0.3, textColor)()\n  };\n};\nvar generateColorVariants = function generateColorVariants(_ref) {\n  var _objectSpread2$1;\n\n  var backgroundColor = _ref.backgroundColor,\n      color = _ref.color,\n      _ref$colorMode = _ref.colorMode,\n      colorMode = _ref$colorMode === void 0 ? 'default' : _ref$colorMode,\n      paletteKey = _ref.paletteKey,\n      paletteOverrides = _ref.paletteOverrides;\n  return _objectSpread2((_objectSpread2$1 = {}, _objectSpread2$1[paletteKey + \"100\"] = tint(0.7, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"200\"] = tint(0.5, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"300\"] = tint(0.3, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"400\"] = tint(0.1, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey] = color, _objectSpread2$1[paletteKey + \"500\"] = color, _objectSpread2$1[paletteKey + \"600\"] = shade(0.1, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"700\"] = shade(0.3, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"800\"] = shade(0.5, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"900\"] = shade(0.7, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"Shade\"] = shade(0.8, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"Tint\"] = tint(0.9, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"Inverted\"] = readableColor(color)(), _objectSpread2$1[paletteKey + \"ShadeInverted\"] = tint(0.7, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1[paletteKey + \"TintInverted\"] = shade(0.5, color)({\n    backgroundColor: backgroundColor,\n    colorMode: colorMode\n  }), _objectSpread2$1), paletteOverrides ? paletteOverrides({\n    color: color\n  }) : {});\n};\n\nexport { generateColorVariants, generateTextVariants };\n"]},"metadata":{},"sourceType":"module"}