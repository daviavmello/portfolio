{"ast":null,"code":"import { useState, useCallback } from 'react';\n\nfunction useOptionsState(_ref) {\n  var defaultValue = _ref.defaultValue,\n      isNativeInput = _ref.isNativeInput,\n      onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      type = _ref.type,\n      value = _ref.value;\n\n  var _React$useState = useState(defaultValue || []),\n      controlledValue = _React$useState[0],\n      setControlledValue = _React$useState[1];\n\n  var values = typeof value !== 'undefined' ? value : controlledValue;\n  var handleChange = useCallback(function (e) {\n    var _e$target;\n\n    var newValue = isNativeInput ? (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value : e.value;\n    var newValues = newValue;\n\n    if (type === 'checkbox') {\n      newValues = [];\n\n      if (values.includes(newValue)) {\n        newValues = (values || []).filter(function (val) {\n          return val !== newValue;\n        });\n      } else {\n        newValues = [].concat(values || [], [newValue]);\n      }\n    }\n\n    if (typeof value !== 'undefined') {\n      onChange && onChange(newValues, newValue);\n    } else {\n      setControlledValue(newValues);\n    }\n  }, [isNativeInput, onChange, type, value, values]);\n  var handleBlur = useCallback(function () {\n    onBlur && onBlur(values);\n  }, [onBlur, values]);\n  return {\n    getOptionItemProps: function getOptionItemProps(_ref2) {\n      var _ref2$readOnly = _ref2.readOnly,\n          readOnly = _ref2$readOnly === void 0 ? false : _ref2$readOnly,\n          value = _ref2.value;\n      return {\n        checked: values ? values.includes(value) : false,\n        onChange: !readOnly ? handleChange : undefined,\n        onBlur: !readOnly ? handleBlur : undefined\n      };\n    }\n  };\n}\n\nexport { useOptionsState };","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio-react/node_modules/bumbag/es/utils/useOptionsState.js"],"names":["useState","useCallback","useOptionsState","_ref","defaultValue","isNativeInput","onBlur","onChange","type","value","_React$useState","controlledValue","setControlledValue","values","handleChange","e","_e$target","newValue","target","newValues","includes","filter","val","concat","handleBlur","getOptionItemProps","_ref2","_ref2$readOnly","readOnly","checked","undefined"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;;AAEA,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC7B,MAAIC,YAAY,GAAGD,IAAI,CAACC,YAAxB;AAAA,MACIC,aAAa,GAAGF,IAAI,CAACE,aADzB;AAAA,MAEIC,MAAM,GAAGH,IAAI,CAACG,MAFlB;AAAA,MAGIC,QAAQ,GAAGJ,IAAI,CAACI,QAHpB;AAAA,MAIIC,IAAI,GAAGL,IAAI,CAACK,IAJhB;AAAA,MAKIC,KAAK,GAAGN,IAAI,CAACM,KALjB;;AAOA,MAAIC,eAAe,GAAGV,QAAQ,CAACI,YAAY,IAAI,EAAjB,CAA9B;AAAA,MACIO,eAAe,GAAGD,eAAe,CAAC,CAAD,CADrC;AAAA,MAEIE,kBAAkB,GAAGF,eAAe,CAAC,CAAD,CAFxC;;AAIA,MAAIG,MAAM,GAAG,OAAOJ,KAAP,KAAiB,WAAjB,GAA+BA,KAA/B,GAAuCE,eAApD;AACA,MAAIG,YAAY,GAAGb,WAAW,CAAC,UAAUc,CAAV,EAAa;AAC1C,QAAIC,SAAJ;;AAEA,QAAIC,QAAQ,GAAGZ,aAAa,GAAG,CAACW,SAAS,GAAGD,CAAC,CAACG,MAAf,MAA2B,IAA3B,IAAmCF,SAAS,KAAK,KAAK,CAAtD,GAA0D,KAAK,CAA/D,GAAmEA,SAAS,CAACP,KAAhF,GAAwFM,CAAC,CAACN,KAAtH;AACA,QAAIU,SAAS,GAAGF,QAAhB;;AAEA,QAAIT,IAAI,KAAK,UAAb,EAAyB;AACvBW,MAAAA,SAAS,GAAG,EAAZ;;AAEA,UAAIN,MAAM,CAACO,QAAP,CAAgBH,QAAhB,CAAJ,EAA+B;AAC7BE,QAAAA,SAAS,GAAG,CAACN,MAAM,IAAI,EAAX,EAAeQ,MAAf,CAAsB,UAAUC,GAAV,EAAe;AAC/C,iBAAOA,GAAG,KAAKL,QAAf;AACD,SAFW,CAAZ;AAGD,OAJD,MAIO;AACLE,QAAAA,SAAS,GAAG,GAAGI,MAAH,CAAUV,MAAM,IAAI,EAApB,EAAwB,CAACI,QAAD,CAAxB,CAAZ;AACD;AACF;;AAED,QAAI,OAAOR,KAAP,KAAiB,WAArB,EAAkC;AAChCF,MAAAA,QAAQ,IAAIA,QAAQ,CAACY,SAAD,EAAYF,QAAZ,CAApB;AACD,KAFD,MAEO;AACLL,MAAAA,kBAAkB,CAACO,SAAD,CAAlB;AACD;AACF,GAvB6B,EAuB3B,CAACd,aAAD,EAAgBE,QAAhB,EAA0BC,IAA1B,EAAgCC,KAAhC,EAAuCI,MAAvC,CAvB2B,CAA9B;AAwBA,MAAIW,UAAU,GAAGvB,WAAW,CAAC,YAAY;AACvCK,IAAAA,MAAM,IAAIA,MAAM,CAACO,MAAD,CAAhB;AACD,GAF2B,EAEzB,CAACP,MAAD,EAASO,MAAT,CAFyB,CAA5B;AAGA,SAAO;AACLY,IAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;AACrD,UAAIC,cAAc,GAAGD,KAAK,CAACE,QAA3B;AAAA,UACIA,QAAQ,GAAGD,cAAc,KAAK,KAAK,CAAxB,GAA4B,KAA5B,GAAoCA,cADnD;AAAA,UAEIlB,KAAK,GAAGiB,KAAK,CAACjB,KAFlB;AAGA,aAAO;AACLoB,QAAAA,OAAO,EAAEhB,MAAM,GAAGA,MAAM,CAACO,QAAP,CAAgBX,KAAhB,CAAH,GAA4B,KADtC;AAELF,QAAAA,QAAQ,EAAE,CAACqB,QAAD,GAAYd,YAAZ,GAA2BgB,SAFhC;AAGLxB,QAAAA,MAAM,EAAE,CAACsB,QAAD,GAAYJ,UAAZ,GAAyBM;AAH5B,OAAP;AAKD;AAVI,GAAP;AAYD;;AAED,SAAS5B,eAAT","sourcesContent":["import { useState, useCallback } from 'react';\n\nfunction useOptionsState(_ref) {\n  var defaultValue = _ref.defaultValue,\n      isNativeInput = _ref.isNativeInput,\n      onBlur = _ref.onBlur,\n      onChange = _ref.onChange,\n      type = _ref.type,\n      value = _ref.value;\n\n  var _React$useState = useState(defaultValue || []),\n      controlledValue = _React$useState[0],\n      setControlledValue = _React$useState[1];\n\n  var values = typeof value !== 'undefined' ? value : controlledValue;\n  var handleChange = useCallback(function (e) {\n    var _e$target;\n\n    var newValue = isNativeInput ? (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value : e.value;\n    var newValues = newValue;\n\n    if (type === 'checkbox') {\n      newValues = [];\n\n      if (values.includes(newValue)) {\n        newValues = (values || []).filter(function (val) {\n          return val !== newValue;\n        });\n      } else {\n        newValues = [].concat(values || [], [newValue]);\n      }\n    }\n\n    if (typeof value !== 'undefined') {\n      onChange && onChange(newValues, newValue);\n    } else {\n      setControlledValue(newValues);\n    }\n  }, [isNativeInput, onChange, type, value, values]);\n  var handleBlur = useCallback(function () {\n    onBlur && onBlur(values);\n  }, [onBlur, values]);\n  return {\n    getOptionItemProps: function getOptionItemProps(_ref2) {\n      var _ref2$readOnly = _ref2.readOnly,\n          readOnly = _ref2$readOnly === void 0 ? false : _ref2$readOnly,\n          value = _ref2.value;\n      return {\n        checked: values ? values.includes(value) : false,\n        onChange: !readOnly ? handleChange : undefined,\n        onBlur: !readOnly ? handleBlur : undefined\n      };\n    }\n  };\n}\n\nexport { useOptionsState };\n"]},"metadata":{},"sourceType":"module"}