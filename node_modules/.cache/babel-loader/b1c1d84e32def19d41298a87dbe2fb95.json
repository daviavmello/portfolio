{"ast":null,"code":"import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport { useRef, useState, useEffect } from 'react';\nimport { useForkRef } from 'reakit-utils/useForkRef';\nimport { isButton } from 'reakit-utils/isButton';\nimport { warning } from 'reakit-warning';\nimport 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/isPortalEvent';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport '../Role/Role.js';\nimport '../Tabbable/Tabbable.js';\nimport { useClickable } from '../Clickable/Clickable.js'; // Automatically generated\n\nvar BUTTON_KEYS = [];\nvar useButton = createHook({\n  name: \"Button\",\n  compose: useClickable,\n  keys: BUTTON_KEYS,\n  useProps: function useProps(_, _ref) {\n    var htmlRef = _ref.ref,\n        htmlProps = _objectWithoutPropertiesLoose(_ref, [\"ref\"]);\n\n    var ref = useRef(null);\n\n    var _React$useState = useState(undefined),\n        role = _React$useState[0],\n        setRole = _React$useState[1];\n\n    var _React$useState2 = useState(\"button\"),\n        type = _React$useState2[0],\n        setType = _React$useState2[1];\n\n    useEffect(function () {\n      var element = ref.current;\n\n      if (!element) {\n        process.env.NODE_ENV !== \"production\" ? warning(true, \"Can't determine whether the element is a native button because `ref` wasn't passed to the component\", \"See https://reakit.io/docs/button\") : void 0;\n        return;\n      }\n\n      if (!isButton(element)) {\n        if (element.tagName !== \"A\") {\n          setRole(\"button\");\n        }\n\n        setType(undefined);\n      }\n    }, []);\n    return _objectSpread2({\n      ref: useForkRef(ref, htmlRef),\n      role: role,\n      type: type\n    }, htmlProps);\n  }\n});\nvar Button = createComponent({\n  as: \"button\",\n  memo: true,\n  useHook: useButton\n});\nexport { Button, useButton };","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio/node_modules/reakit/es/Button/Button.js"],"names":["_","_objectWithoutPropertiesLoose","a","_objectSpread2","createComponent","createHook","useRef","useState","useEffect","useForkRef","isButton","warning","useClickable","BUTTON_KEYS","useButton","name","compose","keys","useProps","_ref","htmlRef","ref","htmlProps","_React$useState","undefined","role","setRole","_React$useState2","type","setType","element","current","process","env","NODE_ENV","tagName","Button","as","memo","useHook"],"mappings":"AAAA,SAASA,CAAC,IAAIC,6BAAd,EAA6CC,CAAC,IAAIC,cAAlD,QAAwE,0CAAxE;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAO,2BAAP;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAO,yBAAP;AACA,OAAO,2BAAP;AACA,OAAO,kCAAP;AACA,OAAO,6BAAP;AACA,OAAO,4BAAP;AACA,OAAO,+BAAP;AACA,OAAO,wBAAP;AACA,OAAO,uBAAP;AACA,OAAO,iBAAP;AACA,OAAO,yBAAP;AACA,SAASC,YAAT,QAA6B,2BAA7B,C,CAEA;;AACA,IAAIC,WAAW,GAAG,EAAlB;AAEA,IAAIC,SAAS,GAAGT,UAAU,CAAC;AACzBU,EAAAA,IAAI,EAAE,QADmB;AAEzBC,EAAAA,OAAO,EAAEJ,YAFgB;AAGzBK,EAAAA,IAAI,EAAEJ,WAHmB;AAIzBK,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBlB,CAAlB,EAAqBmB,IAArB,EAA2B;AACnC,QAAIC,OAAO,GAAGD,IAAI,CAACE,GAAnB;AAAA,QACIC,SAAS,GAAGrB,6BAA6B,CAACkB,IAAD,EAAO,CAAC,KAAD,CAAP,CAD7C;;AAGA,QAAIE,GAAG,GAAGf,MAAM,CAAC,IAAD,CAAhB;;AAEA,QAAIiB,eAAe,GAAGhB,QAAQ,CAACiB,SAAD,CAA9B;AAAA,QACIC,IAAI,GAAGF,eAAe,CAAC,CAAD,CAD1B;AAAA,QAEIG,OAAO,GAAGH,eAAe,CAAC,CAAD,CAF7B;;AAIA,QAAII,gBAAgB,GAAGpB,QAAQ,CAAC,QAAD,CAA/B;AAAA,QACIqB,IAAI,GAAGD,gBAAgB,CAAC,CAAD,CAD3B;AAAA,QAEIE,OAAO,GAAGF,gBAAgB,CAAC,CAAD,CAF9B;;AAIAnB,IAAAA,SAAS,CAAC,YAAY;AACpB,UAAIsB,OAAO,GAAGT,GAAG,CAACU,OAAlB;;AAEA,UAAI,CAACD,OAAL,EAAc;AACZE,QAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCvB,OAAO,CAAC,IAAD,EAAO,qGAAP,EAA8G,mCAA9G,CAA/C,GAAoM,KAAK,CAAzM;AACA;AACD;;AAED,UAAI,CAACD,QAAQ,CAACoB,OAAD,CAAb,EAAwB;AACtB,YAAIA,OAAO,CAACK,OAAR,KAAoB,GAAxB,EAA6B;AAC3BT,UAAAA,OAAO,CAAC,QAAD,CAAP;AACD;;AAEDG,QAAAA,OAAO,CAACL,SAAD,CAAP;AACD;AACF,KAfQ,EAeN,EAfM,CAAT;AAgBA,WAAOrB,cAAc,CAAC;AACpBkB,MAAAA,GAAG,EAAEZ,UAAU,CAACY,GAAD,EAAMD,OAAN,CADK;AAEpBK,MAAAA,IAAI,EAAEA,IAFc;AAGpBG,MAAAA,IAAI,EAAEA;AAHc,KAAD,EAIlBN,SAJkB,CAArB;AAKD;AAvCwB,CAAD,CAA1B;AAyCA,IAAIc,MAAM,GAAGhC,eAAe,CAAC;AAC3BiC,EAAAA,EAAE,EAAE,QADuB;AAE3BC,EAAAA,IAAI,EAAE,IAFqB;AAG3BC,EAAAA,OAAO,EAAEzB;AAHkB,CAAD,CAA5B;AAMA,SAASsB,MAAT,EAAiBtB,SAAjB","sourcesContent":["import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport { useRef, useState, useEffect } from 'react';\nimport { useForkRef } from 'reakit-utils/useForkRef';\nimport { isButton } from 'reakit-utils/isButton';\nimport { warning } from 'reakit-warning';\nimport 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/isPortalEvent';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport '../Role/Role.js';\nimport '../Tabbable/Tabbable.js';\nimport { useClickable } from '../Clickable/Clickable.js';\n\n// Automatically generated\nvar BUTTON_KEYS = [];\n\nvar useButton = createHook({\n  name: \"Button\",\n  compose: useClickable,\n  keys: BUTTON_KEYS,\n  useProps: function useProps(_, _ref) {\n    var htmlRef = _ref.ref,\n        htmlProps = _objectWithoutPropertiesLoose(_ref, [\"ref\"]);\n\n    var ref = useRef(null);\n\n    var _React$useState = useState(undefined),\n        role = _React$useState[0],\n        setRole = _React$useState[1];\n\n    var _React$useState2 = useState(\"button\"),\n        type = _React$useState2[0],\n        setType = _React$useState2[1];\n\n    useEffect(function () {\n      var element = ref.current;\n\n      if (!element) {\n        process.env.NODE_ENV !== \"production\" ? warning(true, \"Can't determine whether the element is a native button because `ref` wasn't passed to the component\", \"See https://reakit.io/docs/button\") : void 0;\n        return;\n      }\n\n      if (!isButton(element)) {\n        if (element.tagName !== \"A\") {\n          setRole(\"button\");\n        }\n\n        setType(undefined);\n      }\n    }, []);\n    return _objectSpread2({\n      ref: useForkRef(ref, htmlRef),\n      role: role,\n      type: type\n    }, htmlProps);\n  }\n});\nvar Button = createComponent({\n  as: \"button\",\n  memo: true,\n  useHook: useButton\n});\n\nexport { Button, useButton };\n"]},"metadata":{},"sourceType":"module"}