{"ast":null,"code":"import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport { useRef, useEffect } from 'react';\nimport { useForkRef } from 'reakit-utils/useForkRef';\nimport 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport '../Role/Role.js';\nimport '../Id/IdProvider.js';\nimport { unstable_useId } from '../Id/Id.js';\nimport '../__keys-e6a5cfbe.js';\nimport { useDisclosureContent } from '../Disclosure/DisclosureContent.js';\nimport { b as TAB_PANEL_KEYS } from '../__keys-3c0b2243.js';\n\nfunction getTabsWithoutPanel(tabs, panels) {\n  var panelsTabIds = panels.map(function (panel) {\n    return panel.groupId;\n  }).filter(Boolean);\n  return tabs.filter(function (item) {\n    return panelsTabIds.indexOf(item.id || undefined) === -1;\n  });\n}\n\nfunction getPanelIndex(panels, panel) {\n  var panelsWithoutTabId = panels.filter(function (p) {\n    return !p.groupId;\n  });\n  return panelsWithoutTabId.indexOf(panel);\n}\n/**\n * When <TabPanel> is used without tabId:\n *\n *   - First render: getTabId will return undefined because options.panels\n * doesn't contain the current panel yet (registerPanel wasn't called yet).\n * Thus registerPanel will be called without groupId (tabId).\n *\n *   - Second render: options.panels already contains the current panel\n * (because registerPanel was called in the previous render). This means that\n * we'll be able to get the related tabId with the tab panel index. Basically,\n * we filter out all the tabs and panels that have already matched. In this\n * phase, registerPanel will be called again with the proper groupId (tabId).\n *\n *   - In the third render, panel.groupId will be already defined, so we just\n * return it. registerPanel is not called.\n */\n\n\nfunction getTabId(options) {\n  var _options$panels, _tabsWithoutPanel$pan;\n\n  var panel = (_options$panels = options.panels) === null || _options$panels === void 0 ? void 0 : _options$panels.find(function (p) {\n    return p.id === options.id;\n  });\n  var tabId = options.tabId || (panel === null || panel === void 0 ? void 0 : panel.groupId);\n\n  if (tabId || !panel || !options.panels || !options.items) {\n    return tabId;\n  }\n\n  var panelIndex = getPanelIndex(options.panels, panel);\n  var tabsWithoutPanel = getTabsWithoutPanel(options.items, options.panels);\n  return ((_tabsWithoutPanel$pan = tabsWithoutPanel[panelIndex]) === null || _tabsWithoutPanel$pan === void 0 ? void 0 : _tabsWithoutPanel$pan.id) || undefined;\n}\n\nvar useTabPanel = createHook({\n  name: \"TabPanel\",\n  compose: [unstable_useId, useDisclosureContent],\n  keys: TAB_PANEL_KEYS,\n  useProps: function useProps(options, _ref) {\n    var htmlRef = _ref.ref,\n        htmlProps = _objectWithoutPropertiesLoose(_ref, [\"ref\"]);\n\n    var ref = useRef(null);\n    var tabId = getTabId(options);\n    var id = options.id,\n        registerPanel = options.registerPanel,\n        unregisterPanel = options.unregisterPanel;\n    useEffect(function () {\n      if (!id) return undefined;\n      registerPanel === null || registerPanel === void 0 ? void 0 : registerPanel({\n        id: id,\n        ref: ref,\n        groupId: tabId\n      });\n      return function () {\n        unregisterPanel === null || unregisterPanel === void 0 ? void 0 : unregisterPanel(id);\n      };\n    }, [tabId, id, registerPanel, unregisterPanel]);\n    return _objectSpread2({\n      ref: useForkRef(ref, htmlRef),\n      role: \"tabpanel\",\n      tabIndex: 0,\n      \"aria-labelledby\": tabId\n    }, htmlProps);\n  },\n  useComposeOptions: function useComposeOptions(options) {\n    var tabId = getTabId(options);\n    return _objectSpread2({\n      visible: tabId ? options.selectedId === tabId : false\n    }, options);\n  }\n});\nvar TabPanel = createComponent({\n  as: \"div\",\n  useHook: useTabPanel\n});\nexport { TabPanel, useTabPanel };","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio/node_modules/reakit/es/Tab/TabPanel.js"],"names":["_","_objectWithoutPropertiesLoose","a","_objectSpread2","createComponent","createHook","useRef","useEffect","useForkRef","unstable_useId","useDisclosureContent","b","TAB_PANEL_KEYS","getTabsWithoutPanel","tabs","panels","panelsTabIds","map","panel","groupId","filter","Boolean","item","indexOf","id","undefined","getPanelIndex","panelsWithoutTabId","p","getTabId","options","_options$panels","_tabsWithoutPanel$pan","find","tabId","items","panelIndex","tabsWithoutPanel","useTabPanel","name","compose","keys","useProps","_ref","htmlRef","ref","htmlProps","registerPanel","unregisterPanel","role","tabIndex","useComposeOptions","visible","selectedId","TabPanel","as","useHook"],"mappings":"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","sourcesContent":["import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport { useRef, useEffect } from 'react';\nimport { useForkRef } from 'reakit-utils/useForkRef';\nimport 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport '../Role/Role.js';\nimport '../Id/IdProvider.js';\nimport { unstable_useId } from '../Id/Id.js';\nimport '../__keys-e6a5cfbe.js';\nimport { useDisclosureContent } from '../Disclosure/DisclosureContent.js';\nimport { b as TAB_PANEL_KEYS } from '../__keys-3c0b2243.js';\n\nfunction getTabsWithoutPanel(tabs, panels) {\n  var panelsTabIds = panels.map(function (panel) {\n    return panel.groupId;\n  }).filter(Boolean);\n  return tabs.filter(function (item) {\n    return panelsTabIds.indexOf(item.id || undefined) === -1;\n  });\n}\n\nfunction getPanelIndex(panels, panel) {\n  var panelsWithoutTabId = panels.filter(function (p) {\n    return !p.groupId;\n  });\n  return panelsWithoutTabId.indexOf(panel);\n}\n/**\n * When <TabPanel> is used without tabId:\n *\n *   - First render: getTabId will return undefined because options.panels\n * doesn't contain the current panel yet (registerPanel wasn't called yet).\n * Thus registerPanel will be called without groupId (tabId).\n *\n *   - Second render: options.panels already contains the current panel\n * (because registerPanel was called in the previous render). This means that\n * we'll be able to get the related tabId with the tab panel index. Basically,\n * we filter out all the tabs and panels that have already matched. In this\n * phase, registerPanel will be called again with the proper groupId (tabId).\n *\n *   - In the third render, panel.groupId will be already defined, so we just\n * return it. registerPanel is not called.\n */\n\n\nfunction getTabId(options) {\n  var _options$panels, _tabsWithoutPanel$pan;\n\n  var panel = (_options$panels = options.panels) === null || _options$panels === void 0 ? void 0 : _options$panels.find(function (p) {\n    return p.id === options.id;\n  });\n  var tabId = options.tabId || (panel === null || panel === void 0 ? void 0 : panel.groupId);\n\n  if (tabId || !panel || !options.panels || !options.items) {\n    return tabId;\n  }\n\n  var panelIndex = getPanelIndex(options.panels, panel);\n  var tabsWithoutPanel = getTabsWithoutPanel(options.items, options.panels);\n  return ((_tabsWithoutPanel$pan = tabsWithoutPanel[panelIndex]) === null || _tabsWithoutPanel$pan === void 0 ? void 0 : _tabsWithoutPanel$pan.id) || undefined;\n}\n\nvar useTabPanel = createHook({\n  name: \"TabPanel\",\n  compose: [unstable_useId, useDisclosureContent],\n  keys: TAB_PANEL_KEYS,\n  useProps: function useProps(options, _ref) {\n    var htmlRef = _ref.ref,\n        htmlProps = _objectWithoutPropertiesLoose(_ref, [\"ref\"]);\n\n    var ref = useRef(null);\n    var tabId = getTabId(options);\n    var id = options.id,\n        registerPanel = options.registerPanel,\n        unregisterPanel = options.unregisterPanel;\n    useEffect(function () {\n      if (!id) return undefined;\n      registerPanel === null || registerPanel === void 0 ? void 0 : registerPanel({\n        id: id,\n        ref: ref,\n        groupId: tabId\n      });\n      return function () {\n        unregisterPanel === null || unregisterPanel === void 0 ? void 0 : unregisterPanel(id);\n      };\n    }, [tabId, id, registerPanel, unregisterPanel]);\n    return _objectSpread2({\n      ref: useForkRef(ref, htmlRef),\n      role: \"tabpanel\",\n      tabIndex: 0,\n      \"aria-labelledby\": tabId\n    }, htmlProps);\n  },\n  useComposeOptions: function useComposeOptions(options) {\n    var tabId = getTabId(options);\n    return _objectSpread2({\n      visible: tabId ? options.selectedId === tabId : false\n    }, options);\n  }\n});\nvar TabPanel = createComponent({\n  as: \"div\",\n  useHook: useTabPanel\n});\n\nexport { TabPanel, useTabPanel };\n"]},"metadata":{},"sourceType":"module"}