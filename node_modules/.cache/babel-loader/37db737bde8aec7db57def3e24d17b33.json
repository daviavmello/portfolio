{"ast":null,"code":"import { createElement as createElement$1, Fragment } from 'react';\nimport '../Provider/ThemeContext.js';\nimport 'classnames';\nimport '@emotion/css';\nimport '@emotion/react';\nimport '@emotion/styled';\nimport '../utils/useTheme.js';\nimport 'conditional-wrap';\nimport '../utils/useLocalStorage.js';\nimport { b as _objectWithoutPropertiesLoose, _ as _objectSpread2 } from '../_rollupPluginBabelHelpers.js';\nimport '../utils/omit.js';\nimport '../ColorMode/utils.js';\nimport '../ColorMode/ColorModeContext.js';\nimport '../utils/pick.js';\nimport '../utils/cssProps.js';\nimport 'lodash/kebabCase';\nimport 'tinycolor2';\nimport '../getCSSFromStyleObject.js';\nimport '../utils/isFunction.js';\nimport '../utils/get.js';\nimport '../utils/useStyle.js';\nimport '../utils/omitBy.js';\nimport '../utils/useDefaultProps.js';\nimport 'lodash/uniq';\nimport { useClassName } from '../utils/useClassName.js';\nimport 'reakit/Id';\nimport '../utils/parseIcons.js';\nimport '../utils/palette.js';\nimport '../utils/mergeRefs.js';\nimport 'deepmerge';\nimport 'lodash/set';\nimport { createComponent } from '../utils/createComponent.js';\nimport { createElement } from '../utils/createElement.js';\nimport { createHook } from '../utils/createHook.js';\nimport 'lodash/get';\nimport 'capsize';\nimport '../utils/getCapsizeStyles.js';\nimport '@emotion/is-prop-valid';\nimport '../utils/htmlProps.js';\nimport '../utils/OutsideClickHandler.js';\nimport '../theme/palette.js';\nimport { Box } from 'reakit';\nimport '../Button.styles.js';\nimport '../Box.styles.js';\nimport { Box as Box$1 } from '../Box/Box.js';\nimport '../Flex.styles.js';\nimport { Flex } from '../Flex/Flex.js';\nimport '../Icon.styles.js';\nimport '../Icon/Icon.js';\nimport '../Text.styles.js';\nimport '../Text/Text.js';\nimport '../Text/TextBlock.js';\nimport '../Text/TextInline.js';\nimport '../Text/index.js';\nimport '../Spinner.styles.js';\nimport '../Spinner/Spinner.js';\nimport '../Button/Button.js';\nimport 'reakit/VisuallyHidden';\nimport '../Button/ButtonClose.js';\nimport { Button } from '../Button/index.js';\nimport { a as Tag$1, b as TagContent, c as TagClose } from '../Tag.styles.js';\nvar useProps = createHook(function (props, _ref) {\n  var themeKey = _ref.themeKey;\n\n  var children = props.children,\n      onRemove = props.onRemove,\n      restProps = _objectWithoutPropertiesLoose(props, [\"children\", \"onRemove\"]);\n\n  var boxProps = Box$1.useProps(restProps);\n  var className = useClassName({\n    style: Tag$1,\n    styleProps: props,\n    themeKey: themeKey,\n    prevClassName: boxProps.className\n  });\n  var tagContentClassName = useClassName({\n    style: TagContent,\n    styleProps: props,\n    themeKey: themeKey,\n    themeKeySuffix: 'Content'\n  });\n  var tagCloseClassName = useClassName({\n    style: TagClose,\n    styleProps: props,\n    themeKey: themeKey,\n    themeKeySuffix: 'Close'\n  });\n  return _objectSpread2(_objectSpread2({}, boxProps), {}, {\n    className: className,\n    children: /*#__PURE__*/createElement$1(Fragment, null, /*#__PURE__*/createElement$1(Flex, {\n      className: tagContentClassName\n    }, children), onRemove && /*#__PURE__*/createElement$1(Button.Close, {\n      className: tagCloseClassName,\n      onClick: onRemove,\n      iconProps: {\n        fontSize: '200'\n      }\n    }))\n  });\n}, {\n  themeKey: 'Tag',\n  defaultProps: {\n    palette: 'text',\n    size: 'default'\n  }\n});\nvar Tag = createComponent(function (props) {\n  var textProps = useProps(props);\n  return createElement({\n    children: props.children,\n    component: Box,\n    use: props.use,\n    htmlProps: textProps\n  });\n}, {\n  attach: {\n    useProps: useProps,\n    displayName: 'Tag'\n  },\n  themeKey: 'Tag'\n});\nexport { Tag };","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio/node_modules/bumbag/es/Tag/Tag.js"],"names":["createElement","createElement$1","Fragment","b","_objectWithoutPropertiesLoose","_","_objectSpread2","useClassName","createComponent","createHook","Box","Box$1","Flex","Button","a","Tag$1","TagContent","c","TagClose","useProps","props","_ref","themeKey","children","onRemove","restProps","boxProps","className","style","styleProps","prevClassName","tagContentClassName","themeKeySuffix","tagCloseClassName","Close","onClick","iconProps","fontSize","defaultProps","palette","size","Tag","textProps","component","use","htmlProps","attach","displayName"],"mappings":"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","sourcesContent":["import { createElement as createElement$1, Fragment } from 'react';\nimport '../Provider/ThemeContext.js';\nimport 'classnames';\nimport '@emotion/css';\nimport '@emotion/react';\nimport '@emotion/styled';\nimport '../utils/useTheme.js';\nimport 'conditional-wrap';\nimport '../utils/useLocalStorage.js';\nimport { b as _objectWithoutPropertiesLoose, _ as _objectSpread2 } from '../_rollupPluginBabelHelpers.js';\nimport '../utils/omit.js';\nimport '../ColorMode/utils.js';\nimport '../ColorMode/ColorModeContext.js';\nimport '../utils/pick.js';\nimport '../utils/cssProps.js';\nimport 'lodash/kebabCase';\nimport 'tinycolor2';\nimport '../getCSSFromStyleObject.js';\nimport '../utils/isFunction.js';\nimport '../utils/get.js';\nimport '../utils/useStyle.js';\nimport '../utils/omitBy.js';\nimport '../utils/useDefaultProps.js';\nimport 'lodash/uniq';\nimport { useClassName } from '../utils/useClassName.js';\nimport 'reakit/Id';\nimport '../utils/parseIcons.js';\nimport '../utils/palette.js';\nimport '../utils/mergeRefs.js';\nimport 'deepmerge';\nimport 'lodash/set';\nimport { createComponent } from '../utils/createComponent.js';\nimport { createElement } from '../utils/createElement.js';\nimport { createHook } from '../utils/createHook.js';\nimport 'lodash/get';\nimport 'capsize';\nimport '../utils/getCapsizeStyles.js';\nimport '@emotion/is-prop-valid';\nimport '../utils/htmlProps.js';\nimport '../utils/OutsideClickHandler.js';\nimport '../theme/palette.js';\nimport { Box } from 'reakit';\nimport '../Button.styles.js';\nimport '../Box.styles.js';\nimport { Box as Box$1 } from '../Box/Box.js';\nimport '../Flex.styles.js';\nimport { Flex } from '../Flex/Flex.js';\nimport '../Icon.styles.js';\nimport '../Icon/Icon.js';\nimport '../Text.styles.js';\nimport '../Text/Text.js';\nimport '../Text/TextBlock.js';\nimport '../Text/TextInline.js';\nimport '../Text/index.js';\nimport '../Spinner.styles.js';\nimport '../Spinner/Spinner.js';\nimport '../Button/Button.js';\nimport 'reakit/VisuallyHidden';\nimport '../Button/ButtonClose.js';\nimport { Button } from '../Button/index.js';\nimport { a as Tag$1, b as TagContent, c as TagClose } from '../Tag.styles.js';\n\nvar useProps = createHook(function (props, _ref) {\n  var themeKey = _ref.themeKey;\n\n  var children = props.children,\n      onRemove = props.onRemove,\n      restProps = _objectWithoutPropertiesLoose(props, [\"children\", \"onRemove\"]);\n\n  var boxProps = Box$1.useProps(restProps);\n  var className = useClassName({\n    style: Tag$1,\n    styleProps: props,\n    themeKey: themeKey,\n    prevClassName: boxProps.className\n  });\n  var tagContentClassName = useClassName({\n    style: TagContent,\n    styleProps: props,\n    themeKey: themeKey,\n    themeKeySuffix: 'Content'\n  });\n  var tagCloseClassName = useClassName({\n    style: TagClose,\n    styleProps: props,\n    themeKey: themeKey,\n    themeKeySuffix: 'Close'\n  });\n  return _objectSpread2(_objectSpread2({}, boxProps), {}, {\n    className: className,\n    children: /*#__PURE__*/createElement$1(Fragment, null, /*#__PURE__*/createElement$1(Flex, {\n      className: tagContentClassName\n    }, children), onRemove && /*#__PURE__*/createElement$1(Button.Close, {\n      className: tagCloseClassName,\n      onClick: onRemove,\n      iconProps: {\n        fontSize: '200'\n      }\n    }))\n  });\n}, {\n  themeKey: 'Tag',\n  defaultProps: {\n    palette: 'text',\n    size: 'default'\n  }\n});\nvar Tag = createComponent(function (props) {\n  var textProps = useProps(props);\n  return createElement({\n    children: props.children,\n    component: Box,\n    use: props.use,\n    htmlProps: textProps\n  });\n}, {\n  attach: {\n    useProps: useProps,\n    displayName: 'Tag'\n  },\n  themeKey: 'Tag'\n});\n\nexport { Tag };\n"]},"metadata":{},"sourceType":"module"}