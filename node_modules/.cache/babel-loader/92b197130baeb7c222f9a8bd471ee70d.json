{"ast":null,"code":"import { createContext, useContext, useState, createElement } from 'react';\nimport { useIsomorphicEffect } from 'reakit-utils/useIsomorphicEffect';\nimport { canUseDOM } from 'reakit-utils/canUseDOM';\nimport { createPortal } from 'react-dom';\n\nfunction getBodyElement() {\n  return canUseDOM ? document.body : null;\n}\n\nvar PortalContext = /*#__PURE__*/createContext(getBodyElement());\n\nfunction Portal(_ref) {\n  var children = _ref.children; // if it's a nested portal, context is the parent portal\n  // otherwise it's document.body\n  // https://github.com/reakit/reakit/issues/513\n\n  var context = useContext(PortalContext) || getBodyElement();\n\n  var _React$useState = useState(function () {\n    if (canUseDOM) {\n      var element = document.createElement(\"div\");\n      element.className = Portal.__className;\n      return element;\n    } // ssr\n\n\n    return null;\n  }),\n      hostNode = _React$useState[0];\n\n  useIsomorphicEffect(function () {\n    if (!hostNode || !context) return undefined;\n    context.appendChild(hostNode);\n    return function () {\n      context.removeChild(hostNode);\n    };\n  }, [hostNode, context]);\n\n  if (hostNode) {\n    return /*#__PURE__*/createPortal( /*#__PURE__*/createElement(PortalContext.Provider, {\n      value: hostNode\n    }, children), hostNode);\n  } // ssr\n\n\n  return null;\n}\n\nPortal.__className = \"__reakit-portal\";\nPortal.__selector = \".\" + Portal.__className;\nexport { Portal, PortalContext };","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio-react/node_modules/reakit/es/Portal/Portal.js"],"names":["createContext","useContext","useState","createElement","useIsomorphicEffect","canUseDOM","createPortal","getBodyElement","document","body","PortalContext","Portal","_ref","children","context","_React$useState","element","className","__className","hostNode","undefined","appendChild","removeChild","Provider","value","__selector"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,EAA8CC,aAA9C,QAAmE,OAAnE;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,YAAT,QAA6B,WAA7B;;AAEA,SAASC,cAAT,GAA0B;AACxB,SAAOF,SAAS,GAAGG,QAAQ,CAACC,IAAZ,GAAmB,IAAnC;AACD;;AAED,IAAIC,aAAa,GAAG,aAAaV,aAAa,CAACO,cAAc,EAAf,CAA9C;;AACA,SAASI,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,MAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB,CADoB,CAEpB;AACA;AACA;;AACA,MAAIC,OAAO,GAAGb,UAAU,CAACS,aAAD,CAAV,IAA6BH,cAAc,EAAzD;;AAEA,MAAIQ,eAAe,GAAGb,QAAQ,CAAC,YAAY;AACzC,QAAIG,SAAJ,EAAe;AACb,UAAIW,OAAO,GAAGR,QAAQ,CAACL,aAAT,CAAuB,KAAvB,CAAd;AACAa,MAAAA,OAAO,CAACC,SAAR,GAAoBN,MAAM,CAACO,WAA3B;AACA,aAAOF,OAAP;AACD,KALwC,CAKvC;;;AAGF,WAAO,IAAP;AACD,GAT6B,CAA9B;AAAA,MAUIG,QAAQ,GAAGJ,eAAe,CAAC,CAAD,CAV9B;;AAYAX,EAAAA,mBAAmB,CAAC,YAAY;AAC9B,QAAI,CAACe,QAAD,IAAa,CAACL,OAAlB,EAA2B,OAAOM,SAAP;AAC3BN,IAAAA,OAAO,CAACO,WAAR,CAAoBF,QAApB;AACA,WAAO,YAAY;AACjBL,MAAAA,OAAO,CAACQ,WAAR,CAAoBH,QAApB;AACD,KAFD;AAGD,GANkB,EAMhB,CAACA,QAAD,EAAWL,OAAX,CANgB,CAAnB;;AAQA,MAAIK,QAAJ,EAAc;AACZ,WAAO,aAAab,YAAY,EAAE,aAAaH,aAAa,CAACO,aAAa,CAACa,QAAf,EAAyB;AACnFC,MAAAA,KAAK,EAAEL;AAD4E,KAAzB,EAEzDN,QAFyD,CAA5B,EAElBM,QAFkB,CAAhC;AAGD,GA/BmB,CA+BlB;;;AAGF,SAAO,IAAP;AACD;;AACDR,MAAM,CAACO,WAAP,GAAqB,iBAArB;AACAP,MAAM,CAACc,UAAP,GAAoB,MAAMd,MAAM,CAACO,WAAjC;AAEA,SAASP,MAAT,EAAiBD,aAAjB","sourcesContent":["import { createContext, useContext, useState, createElement } from 'react';\nimport { useIsomorphicEffect } from 'reakit-utils/useIsomorphicEffect';\nimport { canUseDOM } from 'reakit-utils/canUseDOM';\nimport { createPortal } from 'react-dom';\n\nfunction getBodyElement() {\n  return canUseDOM ? document.body : null;\n}\n\nvar PortalContext = /*#__PURE__*/createContext(getBodyElement());\nfunction Portal(_ref) {\n  var children = _ref.children;\n  // if it's a nested portal, context is the parent portal\n  // otherwise it's document.body\n  // https://github.com/reakit/reakit/issues/513\n  var context = useContext(PortalContext) || getBodyElement();\n\n  var _React$useState = useState(function () {\n    if (canUseDOM) {\n      var element = document.createElement(\"div\");\n      element.className = Portal.__className;\n      return element;\n    } // ssr\n\n\n    return null;\n  }),\n      hostNode = _React$useState[0];\n\n  useIsomorphicEffect(function () {\n    if (!hostNode || !context) return undefined;\n    context.appendChild(hostNode);\n    return function () {\n      context.removeChild(hostNode);\n    };\n  }, [hostNode, context]);\n\n  if (hostNode) {\n    return /*#__PURE__*/createPortal( /*#__PURE__*/createElement(PortalContext.Provider, {\n      value: hostNode\n    }, children), hostNode);\n  } // ssr\n\n\n  return null;\n}\nPortal.__className = \"__reakit-portal\";\nPortal.__selector = \".\" + Portal.__className;\n\nexport { Portal, PortalContext };\n"]},"metadata":{},"sourceType":"module"}