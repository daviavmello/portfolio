{"ast":null,"code":"import 'react';\nimport '../Provider/ThemeContext.js';\nimport 'classnames';\nimport '@emotion/css';\nimport '@emotion/react';\nimport '@emotion/styled';\nimport './useTheme.js';\nimport 'conditional-wrap';\nimport './useLocalStorage.js';\nimport { _ as _objectSpread2 } from '../_rollupPluginBabelHelpers.js';\nimport './omit.js';\nimport '../ColorMode/utils.js';\nimport '../ColorMode/ColorModeContext.js';\nimport './get.js';\nimport './omitBy.js';\nimport { useDefaultProps } from './useDefaultProps.js';\n\nfunction createHook(useHook, config) {\n  return function (props, _temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$disableCSSProps = _ref.disableCSSProps,\n        disableCSSProps = _ref$disableCSSProps === void 0 ? [] : _ref$disableCSSProps,\n        _ref$themeKey = _ref.themeKey,\n        themeKeyOverride = _ref$themeKey === void 0 ? undefined : _ref$themeKey; // @ts-ignore\n\n\n    var themeKey = themeKeyOverride || (props === null || props === void 0 ? void 0 : props.themeKey) || (config === null || config === void 0 ? void 0 : config.themeKey);\n\n    var _useDefaultProps = useDefaultProps(props, _objectSpread2(_objectSpread2({}, config), {}, {\n      themeKey: themeKey\n    })),\n        newProps = _useDefaultProps.props;\n\n    return useHook(newProps, {\n      disableCSSProps: disableCSSProps,\n      themeKey: config === null || config === void 0 ? void 0 : config.themeKey\n    });\n  };\n}\n\nexport { createHook };","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio/node_modules/bumbag/es/utils/createHook.js"],"names":["_","_objectSpread2","useDefaultProps","createHook","useHook","config","props","_temp","_ref","_ref$disableCSSProps","disableCSSProps","_ref$themeKey","themeKey","themeKeyOverride","undefined","_useDefaultProps","newProps"],"mappings":"AAAA,OAAO,OAAP;AACA,OAAO,6BAAP;AACA,OAAO,YAAP;AACA,OAAO,cAAP;AACA,OAAO,gBAAP;AACA,OAAO,iBAAP;AACA,OAAO,eAAP;AACA,OAAO,kBAAP;AACA,OAAO,sBAAP;AACA,SAASA,CAAC,IAAIC,cAAd,QAAoC,iCAApC;AACA,OAAO,WAAP;AACA,OAAO,uBAAP;AACA,OAAO,kCAAP;AACA,OAAO,UAAP;AACA,OAAO,aAAP;AACA,SAASC,eAAT,QAAgC,sBAAhC;;AAEA,SAASC,UAAT,CAAoBC,OAApB,EAA6BC,MAA7B,EAAqC;AACnC,SAAO,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AAC7B,QAAIC,IAAI,GAAGD,KAAK,KAAK,KAAK,CAAf,GAAmB,EAAnB,GAAwBA,KAAnC;AAAA,QACIE,oBAAoB,GAAGD,IAAI,CAACE,eADhC;AAAA,QAEIA,eAAe,GAAGD,oBAAoB,KAAK,KAAK,CAA9B,GAAkC,EAAlC,GAAuCA,oBAF7D;AAAA,QAGIE,aAAa,GAAGH,IAAI,CAACI,QAHzB;AAAA,QAIIC,gBAAgB,GAAGF,aAAa,KAAK,KAAK,CAAvB,GAA2BG,SAA3B,GAAuCH,aAJ9D,CAD6B,CAO7B;;;AACA,QAAIC,QAAQ,GAAGC,gBAAgB,KAAKP,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqC,KAAK,CAA1C,GAA8CA,KAAK,CAACM,QAAzD,CAAhB,KAAuFP,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACO,QAA9I,CAAf;;AAEA,QAAIG,gBAAgB,GAAGb,eAAe,CAACI,KAAD,EAAQL,cAAc,CAACA,cAAc,CAAC,EAAD,EAAKI,MAAL,CAAf,EAA6B,EAA7B,EAAiC;AAC3FO,MAAAA,QAAQ,EAAEA;AADiF,KAAjC,CAAtB,CAAtC;AAAA,QAGII,QAAQ,GAAGD,gBAAgB,CAACT,KAHhC;;AAKA,WAAOF,OAAO,CAACY,QAAD,EAAW;AACvBN,MAAAA,eAAe,EAAEA,eADM;AAEvBE,MAAAA,QAAQ,EAAEP,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACO;AAF1C,KAAX,CAAd;AAID,GAnBD;AAoBD;;AAED,SAAST,UAAT","sourcesContent":["import 'react';\nimport '../Provider/ThemeContext.js';\nimport 'classnames';\nimport '@emotion/css';\nimport '@emotion/react';\nimport '@emotion/styled';\nimport './useTheme.js';\nimport 'conditional-wrap';\nimport './useLocalStorage.js';\nimport { _ as _objectSpread2 } from '../_rollupPluginBabelHelpers.js';\nimport './omit.js';\nimport '../ColorMode/utils.js';\nimport '../ColorMode/ColorModeContext.js';\nimport './get.js';\nimport './omitBy.js';\nimport { useDefaultProps } from './useDefaultProps.js';\n\nfunction createHook(useHook, config) {\n  return function (props, _temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$disableCSSProps = _ref.disableCSSProps,\n        disableCSSProps = _ref$disableCSSProps === void 0 ? [] : _ref$disableCSSProps,\n        _ref$themeKey = _ref.themeKey,\n        themeKeyOverride = _ref$themeKey === void 0 ? undefined : _ref$themeKey;\n\n    // @ts-ignore\n    var themeKey = themeKeyOverride || (props === null || props === void 0 ? void 0 : props.themeKey) || (config === null || config === void 0 ? void 0 : config.themeKey);\n\n    var _useDefaultProps = useDefaultProps(props, _objectSpread2(_objectSpread2({}, config), {}, {\n      themeKey: themeKey\n    })),\n        newProps = _useDefaultProps.props;\n\n    return useHook(newProps, {\n      disableCSSProps: disableCSSProps,\n      themeKey: config === null || config === void 0 ? void 0 : config.themeKey\n    });\n  };\n}\n\nexport { createHook };\n"]},"metadata":{},"sourceType":"module"}