{"ast":null,"code":"import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport { useRef, useState, useCallback } from 'react';\nimport { useForkRef } from 'reakit-utils/useForkRef';\nimport 'reakit-utils/isButton';\nimport { warning } from 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport { useIsomorphicEffect } from 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/isPortalEvent';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport '../Role/Role.js';\nimport '../Tabbable/Tabbable.js';\nimport '../Clickable/Clickable.js';\nimport '../Button/Button.js';\nimport '../__keys-e6a5cfbe.js';\nimport { b as DIALOG_DISCLOSURE_KEYS } from '../__keys-ed7b48af.js';\nimport { useDisclosure } from '../Disclosure/Disclosure.js';\nvar useDialogDisclosure = createHook({\n  name: \"DialogDisclosure\",\n  compose: useDisclosure,\n  keys: DIALOG_DISCLOSURE_KEYS,\n  useProps: function useProps(options, _ref) {\n    var htmlRef = _ref.ref,\n        htmlOnClick = _ref.onClick,\n        htmlProps = _objectWithoutPropertiesLoose(_ref, [\"ref\", \"onClick\"]);\n\n    var ref = useRef(null);\n    var onClickRef = useLiveRef(htmlOnClick);\n\n    var _React$useState = useState(false),\n        expanded = _React$useState[0],\n        setExpanded = _React$useState[1];\n\n    var disclosureRef = options.unstable_disclosureRef; // aria-expanded may be used for styling purposes, so we useLayoutEffect\n\n    useIsomorphicEffect(function () {\n      var element = ref.current;\n      process.env.NODE_ENV !== \"production\" ? warning(!element, \"Can't determine whether the element is the current disclosure because `ref` wasn't passed to the component\", \"See https://reakit.io/docs/dialog\") : void 0;\n\n      if (disclosureRef && !disclosureRef.current) {\n        disclosureRef.current = element;\n      }\n\n      var isCurrentDisclosure = !(disclosureRef === null || disclosureRef === void 0 ? void 0 : disclosureRef.current) || disclosureRef.current === element;\n      setExpanded(!!options.visible && isCurrentDisclosure);\n    }, [options.visible, disclosureRef]);\n    var onClick = useCallback(function (event) {\n      var _onClickRef$current;\n\n      (_onClickRef$current = onClickRef.current) === null || _onClickRef$current === void 0 ? void 0 : _onClickRef$current.call(onClickRef, event);\n      if (event.defaultPrevented) return;\n\n      if (disclosureRef) {\n        disclosureRef.current = event.currentTarget;\n      }\n    }, [disclosureRef]);\n    return _objectSpread2({\n      ref: useForkRef(ref, htmlRef),\n      \"aria-haspopup\": \"dialog\",\n      \"aria-expanded\": expanded,\n      onClick: onClick\n    }, htmlProps);\n  }\n});\nvar DialogDisclosure = createComponent({\n  as: \"button\",\n  memo: true,\n  useHook: useDialogDisclosure\n});\nexport { DialogDisclosure, useDialogDisclosure };","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio-react/node_modules/reakit/es/Dialog/DialogDisclosure.js"],"names":["_","_objectWithoutPropertiesLoose","a","_objectSpread2","createComponent","createHook","useRef","useState","useCallback","useForkRef","warning","useLiveRef","useIsomorphicEffect","b","DIALOG_DISCLOSURE_KEYS","useDisclosure","useDialogDisclosure","name","compose","keys","useProps","options","_ref","htmlRef","ref","htmlOnClick","onClick","htmlProps","onClickRef","_React$useState","expanded","setExpanded","disclosureRef","unstable_disclosureRef","element","current","process","env","NODE_ENV","isCurrentDisclosure","visible","event","_onClickRef$current","call","defaultPrevented","currentTarget","DialogDisclosure","as","memo","useHook"],"mappings":"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","sourcesContent":["import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport { useRef, useState, useCallback } from 'react';\nimport { useForkRef } from 'reakit-utils/useForkRef';\nimport 'reakit-utils/isButton';\nimport { warning } from 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport { useIsomorphicEffect } from 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/isPortalEvent';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport '../Role/Role.js';\nimport '../Tabbable/Tabbable.js';\nimport '../Clickable/Clickable.js';\nimport '../Button/Button.js';\nimport '../__keys-e6a5cfbe.js';\nimport { b as DIALOG_DISCLOSURE_KEYS } from '../__keys-ed7b48af.js';\nimport { useDisclosure } from '../Disclosure/Disclosure.js';\n\nvar useDialogDisclosure = createHook({\n  name: \"DialogDisclosure\",\n  compose: useDisclosure,\n  keys: DIALOG_DISCLOSURE_KEYS,\n  useProps: function useProps(options, _ref) {\n    var htmlRef = _ref.ref,\n        htmlOnClick = _ref.onClick,\n        htmlProps = _objectWithoutPropertiesLoose(_ref, [\"ref\", \"onClick\"]);\n\n    var ref = useRef(null);\n    var onClickRef = useLiveRef(htmlOnClick);\n\n    var _React$useState = useState(false),\n        expanded = _React$useState[0],\n        setExpanded = _React$useState[1];\n\n    var disclosureRef = options.unstable_disclosureRef; // aria-expanded may be used for styling purposes, so we useLayoutEffect\n\n    useIsomorphicEffect(function () {\n      var element = ref.current;\n      process.env.NODE_ENV !== \"production\" ? warning(!element, \"Can't determine whether the element is the current disclosure because `ref` wasn't passed to the component\", \"See https://reakit.io/docs/dialog\") : void 0;\n\n      if (disclosureRef && !disclosureRef.current) {\n        disclosureRef.current = element;\n      }\n\n      var isCurrentDisclosure = !(disclosureRef === null || disclosureRef === void 0 ? void 0 : disclosureRef.current) || disclosureRef.current === element;\n      setExpanded(!!options.visible && isCurrentDisclosure);\n    }, [options.visible, disclosureRef]);\n    var onClick = useCallback(function (event) {\n      var _onClickRef$current;\n\n      (_onClickRef$current = onClickRef.current) === null || _onClickRef$current === void 0 ? void 0 : _onClickRef$current.call(onClickRef, event);\n      if (event.defaultPrevented) return;\n\n      if (disclosureRef) {\n        disclosureRef.current = event.currentTarget;\n      }\n    }, [disclosureRef]);\n    return _objectSpread2({\n      ref: useForkRef(ref, htmlRef),\n      \"aria-haspopup\": \"dialog\",\n      \"aria-expanded\": expanded,\n      onClick: onClick\n    }, htmlProps);\n  }\n});\nvar DialogDisclosure = createComponent({\n  as: \"button\",\n  memo: true,\n  useHook: useDialogDisclosure\n});\n\nexport { DialogDisclosure, useDialogDisclosure };\n"]},"metadata":{},"sourceType":"module"}