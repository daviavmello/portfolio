{"ast":null,"code":"var globalState = {\n  currentTooltipId: null,\n  listeners: new Set(),\n  subscribe: function subscribe(listener) {\n    var _this = this;\n\n    this.listeners.add(listener);\n    return function () {\n      _this.listeners.delete(listener);\n    };\n  },\n  show: function show(id) {\n    this.currentTooltipId = id;\n    this.listeners.forEach(function (listener) {\n      return listener(id);\n    });\n  },\n  hide: function hide(id) {\n    if (this.currentTooltipId === id) {\n      this.currentTooltipId = null;\n      this.listeners.forEach(function (listener) {\n        return listener(null);\n      });\n    }\n  }\n};\nexport { globalState as g };","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio-react/node_modules/reakit/es/__globalState-300469f0.js"],"names":["globalState","currentTooltipId","listeners","Set","subscribe","listener","_this","add","delete","show","id","forEach","hide","g"],"mappings":"AAAA,IAAIA,WAAW,GAAG;AAChBC,EAAAA,gBAAgB,EAAE,IADF;AAEhBC,EAAAA,SAAS,EAAE,IAAIC,GAAJ,EAFK;AAGhBC,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBC,QAAnB,EAA6B;AACtC,QAAIC,KAAK,GAAG,IAAZ;;AAEA,SAAKJ,SAAL,CAAeK,GAAf,CAAmBF,QAAnB;AACA,WAAO,YAAY;AACjBC,MAAAA,KAAK,CAACJ,SAAN,CAAgBM,MAAhB,CAAuBH,QAAvB;AACD,KAFD;AAGD,GAVe;AAWhBI,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcC,EAAd,EAAkB;AACtB,SAAKT,gBAAL,GAAwBS,EAAxB;AACA,SAAKR,SAAL,CAAeS,OAAf,CAAuB,UAAUN,QAAV,EAAoB;AACzC,aAAOA,QAAQ,CAACK,EAAD,CAAf;AACD,KAFD;AAGD,GAhBe;AAiBhBE,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcF,EAAd,EAAkB;AACtB,QAAI,KAAKT,gBAAL,KAA0BS,EAA9B,EAAkC;AAChC,WAAKT,gBAAL,GAAwB,IAAxB;AACA,WAAKC,SAAL,CAAeS,OAAf,CAAuB,UAAUN,QAAV,EAAoB;AACzC,eAAOA,QAAQ,CAAC,IAAD,CAAf;AACD,OAFD;AAGD;AACF;AAxBe,CAAlB;AA2BA,SAASL,WAAW,IAAIa,CAAxB","sourcesContent":["var globalState = {\n  currentTooltipId: null,\n  listeners: new Set(),\n  subscribe: function subscribe(listener) {\n    var _this = this;\n\n    this.listeners.add(listener);\n    return function () {\n      _this.listeners.delete(listener);\n    };\n  },\n  show: function show(id) {\n    this.currentTooltipId = id;\n    this.listeners.forEach(function (listener) {\n      return listener(id);\n    });\n  },\n  hide: function hide(id) {\n    if (this.currentTooltipId === id) {\n      this.currentTooltipId = null;\n      this.listeners.forEach(function (listener) {\n        return listener(null);\n      });\n    }\n  }\n};\n\nexport { globalState as g };\n"]},"metadata":{},"sourceType":"module"}