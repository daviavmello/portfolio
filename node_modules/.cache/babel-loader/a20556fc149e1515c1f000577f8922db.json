{"ast":null,"code":"import { createContext, useState, useMemo, useEffect, createElement } from 'react';\nimport '../utils/debounceAnimationFrame.js';\nimport '../utils/useViewportHeight.js';\nimport '../Provider/ThemeContext.js';\nimport 'classnames';\nimport 'emotion';\nimport '@emotion/core';\nimport 'emotion-theming';\nimport '@emotion/styled';\nimport '../utils/useTheme.js';\nimport '../utils/useLocalStorage.js';\nimport '../_rollupPluginBabelHelpers.js';\nimport '../utils/omit.js';\nimport '../ColorMode/utils.js';\nimport '../ColorMode/ColorModeContext.js';\nimport '../utils/pick.js';\nimport '../utils/cssProps.js';\nimport 'lodash/kebabCase';\nimport 'tinycolor2';\nimport '../utils/isFunction.js';\nimport '../utils/get.js';\nimport '../getCSSFromStyleObject.js';\nimport '../utils/useStyle.js';\nimport '../utils/omitBy.js';\nimport '../utils/useDefaultProps.js';\nimport 'lodash/uniq';\nimport '../utils/useClassName.js';\nimport '../utils/getMediaQueryList.js';\nimport { useBreakpoint } from '../utils/useBreakpoint.js';\nimport 'reakit/Id';\nimport '../utils/mergeRefs.js';\nimport 'deepmerge';\nimport 'lodash/set';\nimport '../utils/createComponent.js';\nimport '../utils/createElement.js';\nimport '../utils/createHook.js';\nimport 'capsize';\nimport '../utils/getHiddenScrollbarStyles.js';\nimport '@emotion/is-prop-valid';\nimport '../utils/htmlProps.js';\nimport '../utils/OutsideClickHandler.js';\nimport 'reakit';\nimport '../Box.styles.js';\nimport '../Box/Box.js';\nimport '../Disclosure.styles.js';\nimport '../Disclosure/DisclosureState.js';\nimport '../Disclosure/Disclosure.js';\nimport '../Disclosure/DisclosureContent.js';\nimport { Disclosure } from '../Disclosure/index.js';\nimport '../Modal.styles.js';\nimport '../Modal/ModalState.js';\nimport '../Modal/ModalBackdrop.js';\nimport '../Modal/Modal.js';\nimport '../Modal/ModalDisclosure.js';\nimport '../Modal/index.js';\nimport '../Drawer.styles.js';\nimport '../Drawer/Drawer.js';\nimport '../Drawer/DrawerDisclosure.js';\nimport '../Drawer/DrawerState.js';\nimport { Drawer } from '../Drawer/index.js';\nvar PageContext = createContext({\n  collapseBelow: 'desktop',\n  isCollapsed: false,\n  sidebar: {\n    isOpen: true,\n    open: function open() {\n      return undefined;\n    },\n    close: function close() {\n      return undefined;\n    },\n    toggle: function toggle() {\n      return undefined;\n    },\n    isMinimized: false,\n    minimize: function minimize() {\n      return undefined;\n    },\n    maximize: function maximize() {\n      return undefined;\n    },\n    toggleMinimize: function toggleMinimize() {\n      return undefined;\n    },\n    drawer: {},\n    disclosure: {}\n  },\n  header: {\n    isOpen: true,\n    open: function open() {\n      return undefined;\n    },\n    close: function close() {\n      return undefined;\n    },\n    toggle: function toggle() {\n      return undefined;\n    },\n    disclosure: {}\n  }\n});\n\nfunction PageProvider(props) {\n  var children = props.children,\n      _props$collapseBelow = props.collapseBelow,\n      collapseBelow = _props$collapseBelow === void 0 ? 'desktop' : _props$collapseBelow;\n  var isCollapsed = useBreakpoint(\"max-\" + collapseBelow);\n\n  var _React$useState = useState(false),\n      isSidebarMinimized = _React$useState[0],\n      setIsSidebarMinimized = _React$useState[1];\n\n  var sidebarDrawer = Drawer.useState({\n    animated: true\n  });\n  var sidebarDisclosure = Disclosure.useState({\n    visible: true\n  });\n  var sidebarState = isCollapsed ? sidebarDrawer : sidebarDisclosure;\n  var headerDisclosure = Disclosure.useState({\n    visible: true\n  });\n  var value = useMemo(function () {\n    return {\n      collapseBelow: collapseBelow,\n      isCollapsed: isCollapsed,\n      sidebar: {\n        isOpen: sidebarState.visible,\n        open: sidebarState.show,\n        close: sidebarState.hide,\n        toggle: sidebarState.toggle,\n        isMinimized: isSidebarMinimized,\n        minimize: function minimize() {\n          return setIsSidebarMinimized(true);\n        },\n        maximize: function maximize() {\n          return setIsSidebarMinimized(false);\n        },\n        toggleMinimize: function toggleMinimize() {\n          return setIsSidebarMinimized(function (isMinimized) {\n            return !isMinimized;\n          });\n        },\n        drawer: sidebarDrawer,\n        disclosure: sidebarDisclosure\n      },\n      header: {\n        isOpen: headerDisclosure.visible,\n        open: headerDisclosure.show,\n        close: headerDisclosure.hide,\n        toggle: headerDisclosure.toggle,\n        disclosure: headerDisclosure\n      }\n    };\n  }, [collapseBelow, headerDisclosure, isCollapsed, isSidebarMinimized, sidebarDisclosure, sidebarDrawer, sidebarState.hide, sidebarState.show, sidebarState.toggle, sidebarState.visible]);\n  useEffect(function () {\n    if (isCollapsed) {\n      setIsSidebarMinimized(false);\n    }\n  }, [isCollapsed]);\n  return /*#__PURE__*/createElement(PageContext.Provider, {\n    value: value\n  }, children);\n}\n\nexport { PageContext, PageProvider };","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio-react/node_modules/bumbag/es/Page/PageContext.js"],"names":["createContext","useState","useMemo","useEffect","createElement","useBreakpoint","Disclosure","Drawer","PageContext","collapseBelow","isCollapsed","sidebar","isOpen","open","undefined","close","toggle","isMinimized","minimize","maximize","toggleMinimize","drawer","disclosure","header","PageProvider","props","children","_props$collapseBelow","_React$useState","isSidebarMinimized","setIsSidebarMinimized","sidebarDrawer","animated","sidebarDisclosure","visible","sidebarState","headerDisclosure","value","show","hide","Provider"],"mappings":"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","sourcesContent":["import { createContext, useState, useMemo, useEffect, createElement } from 'react';\nimport '../utils/debounceAnimationFrame.js';\nimport '../utils/useViewportHeight.js';\nimport '../Provider/ThemeContext.js';\nimport 'classnames';\nimport 'emotion';\nimport '@emotion/core';\nimport 'emotion-theming';\nimport '@emotion/styled';\nimport '../utils/useTheme.js';\nimport '../utils/useLocalStorage.js';\nimport '../_rollupPluginBabelHelpers.js';\nimport '../utils/omit.js';\nimport '../ColorMode/utils.js';\nimport '../ColorMode/ColorModeContext.js';\nimport '../utils/pick.js';\nimport '../utils/cssProps.js';\nimport 'lodash/kebabCase';\nimport 'tinycolor2';\nimport '../utils/isFunction.js';\nimport '../utils/get.js';\nimport '../getCSSFromStyleObject.js';\nimport '../utils/useStyle.js';\nimport '../utils/omitBy.js';\nimport '../utils/useDefaultProps.js';\nimport 'lodash/uniq';\nimport '../utils/useClassName.js';\nimport '../utils/getMediaQueryList.js';\nimport { useBreakpoint } from '../utils/useBreakpoint.js';\nimport 'reakit/Id';\nimport '../utils/mergeRefs.js';\nimport 'deepmerge';\nimport 'lodash/set';\nimport '../utils/createComponent.js';\nimport '../utils/createElement.js';\nimport '../utils/createHook.js';\nimport 'capsize';\nimport '../utils/getHiddenScrollbarStyles.js';\nimport '@emotion/is-prop-valid';\nimport '../utils/htmlProps.js';\nimport '../utils/OutsideClickHandler.js';\nimport 'reakit';\nimport '../Box.styles.js';\nimport '../Box/Box.js';\nimport '../Disclosure.styles.js';\nimport '../Disclosure/DisclosureState.js';\nimport '../Disclosure/Disclosure.js';\nimport '../Disclosure/DisclosureContent.js';\nimport { Disclosure } from '../Disclosure/index.js';\nimport '../Modal.styles.js';\nimport '../Modal/ModalState.js';\nimport '../Modal/ModalBackdrop.js';\nimport '../Modal/Modal.js';\nimport '../Modal/ModalDisclosure.js';\nimport '../Modal/index.js';\nimport '../Drawer.styles.js';\nimport '../Drawer/Drawer.js';\nimport '../Drawer/DrawerDisclosure.js';\nimport '../Drawer/DrawerState.js';\nimport { Drawer } from '../Drawer/index.js';\n\nvar PageContext = createContext({\n  collapseBelow: 'desktop',\n  isCollapsed: false,\n  sidebar: {\n    isOpen: true,\n    open: function open() {\n      return undefined;\n    },\n    close: function close() {\n      return undefined;\n    },\n    toggle: function toggle() {\n      return undefined;\n    },\n    isMinimized: false,\n    minimize: function minimize() {\n      return undefined;\n    },\n    maximize: function maximize() {\n      return undefined;\n    },\n    toggleMinimize: function toggleMinimize() {\n      return undefined;\n    },\n    drawer: {},\n    disclosure: {}\n  },\n  header: {\n    isOpen: true,\n    open: function open() {\n      return undefined;\n    },\n    close: function close() {\n      return undefined;\n    },\n    toggle: function toggle() {\n      return undefined;\n    },\n    disclosure: {}\n  }\n});\nfunction PageProvider(props) {\n  var children = props.children,\n      _props$collapseBelow = props.collapseBelow,\n      collapseBelow = _props$collapseBelow === void 0 ? 'desktop' : _props$collapseBelow;\n  var isCollapsed = useBreakpoint(\"max-\" + collapseBelow);\n\n  var _React$useState = useState(false),\n      isSidebarMinimized = _React$useState[0],\n      setIsSidebarMinimized = _React$useState[1];\n\n  var sidebarDrawer = Drawer.useState({\n    animated: true\n  });\n  var sidebarDisclosure = Disclosure.useState({\n    visible: true\n  });\n  var sidebarState = isCollapsed ? sidebarDrawer : sidebarDisclosure;\n  var headerDisclosure = Disclosure.useState({\n    visible: true\n  });\n  var value = useMemo(function () {\n    return {\n      collapseBelow: collapseBelow,\n      isCollapsed: isCollapsed,\n      sidebar: {\n        isOpen: sidebarState.visible,\n        open: sidebarState.show,\n        close: sidebarState.hide,\n        toggle: sidebarState.toggle,\n        isMinimized: isSidebarMinimized,\n        minimize: function minimize() {\n          return setIsSidebarMinimized(true);\n        },\n        maximize: function maximize() {\n          return setIsSidebarMinimized(false);\n        },\n        toggleMinimize: function toggleMinimize() {\n          return setIsSidebarMinimized(function (isMinimized) {\n            return !isMinimized;\n          });\n        },\n        drawer: sidebarDrawer,\n        disclosure: sidebarDisclosure\n      },\n      header: {\n        isOpen: headerDisclosure.visible,\n        open: headerDisclosure.show,\n        close: headerDisclosure.hide,\n        toggle: headerDisclosure.toggle,\n        disclosure: headerDisclosure\n      }\n    };\n  }, [collapseBelow, headerDisclosure, isCollapsed, isSidebarMinimized, sidebarDisclosure, sidebarDrawer, sidebarState.hide, sidebarState.show, sidebarState.toggle, sidebarState.visible]);\n  useEffect(function () {\n    if (isCollapsed) {\n      setIsSidebarMinimized(false);\n    }\n  }, [isCollapsed]);\n  return /*#__PURE__*/createElement(PageContext.Provider, {\n    value: value\n  }, children);\n}\n\nexport { PageContext, PageProvider };\n"]},"metadata":{},"sourceType":"module"}