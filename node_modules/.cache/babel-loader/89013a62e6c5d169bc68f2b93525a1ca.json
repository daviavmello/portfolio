{"ast":null,"code":"import { a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport { useContext, useState, useMemo } from 'react';\nimport { unstable_IdContext } from './IdProvider.js'; // Automatically generated\n\nvar ID_STATE_KEYS = [\"baseId\", \"unstable_idCountRef\", \"setBaseId\"];\nvar ID_KEYS = [].concat(ID_STATE_KEYS, [\"id\"]);\nvar unstable_useId = createHook({\n  keys: ID_KEYS,\n  useOptions: function useOptions(options, htmlProps) {\n    var generateId = useContext(unstable_IdContext);\n\n    var _React$useState = useState(function () {\n      // This comes from useIdState\n      if (options.unstable_idCountRef) {\n        options.unstable_idCountRef.current += 1;\n        return \"-\" + options.unstable_idCountRef.current;\n      } // If there's no useIdState, we check if `baseId` was passed (as a prop,\n      // not from useIdState).\n\n\n      if (options.baseId) {\n        return \"-\" + generateId(\"\");\n      }\n\n      return \"\";\n    }),\n        suffix = _React$useState[0]; // `baseId` will be the prop passed directly as a prop or via useIdState.\n    // If there's neither, then it'll fallback to Context's generateId.\n    // This generateId can result in a sequential ID (if there's a Provider)\n    // or a random string (without Provider).\n\n\n    var baseId = useMemo(function () {\n      return options.baseId || generateId();\n    }, [options.baseId, generateId]);\n    var id = htmlProps.id || options.id || \"\" + baseId + suffix;\n    return _objectSpread2(_objectSpread2({}, options), {}, {\n      id: id\n    });\n  },\n  useProps: function useProps(options, htmlProps) {\n    return _objectSpread2({\n      id: options.id\n    }, htmlProps);\n  }\n});\nvar unstable_Id = createComponent({\n  as: \"div\",\n  useHook: unstable_useId\n});\nexport { unstable_Id, unstable_useId };","map":{"version":3,"sources":["/Users/davimello/Creative Cloud Files/Davi/code/portfolio/node_modules/reakit/es/Id/Id.js"],"names":["a","_objectSpread2","createComponent","createHook","useContext","useState","useMemo","unstable_IdContext","ID_STATE_KEYS","ID_KEYS","concat","unstable_useId","keys","useOptions","options","htmlProps","generateId","_React$useState","unstable_idCountRef","current","baseId","suffix","id","useProps","unstable_Id","as","useHook"],"mappings":"AAAA,SAASA,CAAC,IAAIC,cAAd,QAAoC,0CAApC;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,OAA/B,QAA8C,OAA9C;AACA,SAASC,kBAAT,QAAmC,iBAAnC,C,CAEA;;AACA,IAAIC,aAAa,GAAG,CAAC,QAAD,EAAW,qBAAX,EAAkC,WAAlC,CAApB;AACA,IAAIC,OAAO,GAAG,GAAGC,MAAH,CAAUF,aAAV,EAAyB,CAAC,IAAD,CAAzB,CAAd;AAEA,IAAIG,cAAc,GAAGR,UAAU,CAAC;AAC9BS,EAAAA,IAAI,EAAEH,OADwB;AAE9BI,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,OAApB,EAA6BC,SAA7B,EAAwC;AAClD,QAAIC,UAAU,GAAGZ,UAAU,CAACG,kBAAD,CAA3B;;AAEA,QAAIU,eAAe,GAAGZ,QAAQ,CAAC,YAAY;AACzC;AACA,UAAIS,OAAO,CAACI,mBAAZ,EAAiC;AAC/BJ,QAAAA,OAAO,CAACI,mBAAR,CAA4BC,OAA5B,IAAuC,CAAvC;AACA,eAAO,MAAML,OAAO,CAACI,mBAAR,CAA4BC,OAAzC;AACD,OALwC,CAKvC;AACF;;;AAGA,UAAIL,OAAO,CAACM,MAAZ,EAAoB;AAClB,eAAO,MAAMJ,UAAU,CAAC,EAAD,CAAvB;AACD;;AAED,aAAO,EAAP;AACD,KAd6B,CAA9B;AAAA,QAeIK,MAAM,GAAGJ,eAAe,CAAC,CAAD,CAf5B,CAHkD,CAkBjB;AACjC;AACA;AACA;;;AAGA,QAAIG,MAAM,GAAGd,OAAO,CAAC,YAAY;AAC/B,aAAOQ,OAAO,CAACM,MAAR,IAAkBJ,UAAU,EAAnC;AACD,KAFmB,EAEjB,CAACF,OAAO,CAACM,MAAT,EAAiBJ,UAAjB,CAFiB,CAApB;AAGA,QAAIM,EAAE,GAAGP,SAAS,CAACO,EAAV,IAAgBR,OAAO,CAACQ,EAAxB,IAA8B,KAAKF,MAAL,GAAcC,MAArD;AACA,WAAOpB,cAAc,CAACA,cAAc,CAAC,EAAD,EAAKa,OAAL,CAAf,EAA8B,EAA9B,EAAkC;AACrDQ,MAAAA,EAAE,EAAEA;AADiD,KAAlC,CAArB;AAGD,GAjC6B;AAkC9BC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBT,OAAlB,EAA2BC,SAA3B,EAAsC;AAC9C,WAAOd,cAAc,CAAC;AACpBqB,MAAAA,EAAE,EAAER,OAAO,CAACQ;AADQ,KAAD,EAElBP,SAFkB,CAArB;AAGD;AAtC6B,CAAD,CAA/B;AAwCA,IAAIS,WAAW,GAAGtB,eAAe,CAAC;AAChCuB,EAAAA,EAAE,EAAE,KAD4B;AAEhCC,EAAAA,OAAO,EAAEf;AAFuB,CAAD,CAAjC;AAKA,SAASa,WAAT,EAAsBb,cAAtB","sourcesContent":["import { a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport { useContext, useState, useMemo } from 'react';\nimport { unstable_IdContext } from './IdProvider.js';\n\n// Automatically generated\nvar ID_STATE_KEYS = [\"baseId\", \"unstable_idCountRef\", \"setBaseId\"];\nvar ID_KEYS = [].concat(ID_STATE_KEYS, [\"id\"]);\n\nvar unstable_useId = createHook({\n  keys: ID_KEYS,\n  useOptions: function useOptions(options, htmlProps) {\n    var generateId = useContext(unstable_IdContext);\n\n    var _React$useState = useState(function () {\n      // This comes from useIdState\n      if (options.unstable_idCountRef) {\n        options.unstable_idCountRef.current += 1;\n        return \"-\" + options.unstable_idCountRef.current;\n      } // If there's no useIdState, we check if `baseId` was passed (as a prop,\n      // not from useIdState).\n\n\n      if (options.baseId) {\n        return \"-\" + generateId(\"\");\n      }\n\n      return \"\";\n    }),\n        suffix = _React$useState[0]; // `baseId` will be the prop passed directly as a prop or via useIdState.\n    // If there's neither, then it'll fallback to Context's generateId.\n    // This generateId can result in a sequential ID (if there's a Provider)\n    // or a random string (without Provider).\n\n\n    var baseId = useMemo(function () {\n      return options.baseId || generateId();\n    }, [options.baseId, generateId]);\n    var id = htmlProps.id || options.id || \"\" + baseId + suffix;\n    return _objectSpread2(_objectSpread2({}, options), {}, {\n      id: id\n    });\n  },\n  useProps: function useProps(options, htmlProps) {\n    return _objectSpread2({\n      id: options.id\n    }, htmlProps);\n  }\n});\nvar unstable_Id = createComponent({\n  as: \"div\",\n  useHook: unstable_useId\n});\n\nexport { unstable_Id, unstable_useId };\n"]},"metadata":{},"sourceType":"module"}