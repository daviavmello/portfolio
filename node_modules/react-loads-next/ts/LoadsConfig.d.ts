import * as React from 'react';
import { LoadsConfig } from './types';
export declare const defaultConfig: {
    cacheTime: number;
    cacheStrategy: import("./types").CacheStrategy;
    debounce: number;
    debounceCache: boolean;
    dedupingInterval: number;
    delay: number;
    defer: boolean;
    loadPolicy: import("./types").LoadPolicy;
    revalidateOnWindowFocus: boolean;
    revalidateTime: number;
    suspense: boolean;
    throwError: boolean;
    timeout: number;
};
export declare const Context: React.Context<{
    cacheTime: number;
    cacheStrategy: import("./types").CacheStrategy;
    debounce: number;
    debounceCache: boolean;
    dedupingInterval: number;
    delay: number;
    defer: boolean;
    loadPolicy: import("./types").LoadPolicy;
    revalidateOnWindowFocus: boolean;
    revalidateTime: number;
    suspense: boolean;
    throwError: boolean;
    timeout: number;
}>;
export declare function Provider({ children, config }: {
    children: React.ReactNode;
    config: LoadsConfig<any, any>;
}): JSX.Element;
