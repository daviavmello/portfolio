import { ContextArg, ConfigArg, FnArg, LoadingState } from './types';
export declare function useLoads<Response, Err>(context: ContextArg | null, fn: FnArg<Response>, localConfig?: ConfigArg<Response, Err>): {
    isCached: boolean;
    isIdle: boolean;
    isPending: boolean;
    isPendingSlow: boolean;
    isResolved: boolean;
    isRejected: boolean;
    isReloading: boolean;
    isReloadingSlow: boolean;
    load: (..._args: any) => Promise<void | Response> | undefined;
    update: ((..._args: any) => Promise<void | Response> | undefined) | ((..._args: any) => Promise<void | Response> | undefined)[] | undefined;
    reset: () => void;
    response: Response | undefined;
    error: Err | undefined;
    state: LoadingState;
};
